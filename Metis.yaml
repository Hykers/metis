openapi: 3.1.0
info:
  title: Metis
  version: '2.0'
  description: |-
    # Требования к написанию OpenAPI:
    1. Все атрибуты должны иметь продуктивный пример - как минимум для понимания того, что может прийти, а как максимум для генерации тестового JSON для проверки ошибок при дизайне спецификации
    2. Необходимо отдельно описывать продуктивный пример модели (в Examples) в следующих случаях (для того, чтобы показать все возможные состояния):
        - если у модели есть атрибут с разными типами данных - например String и Integer
        - eсли у модели есть вилка из других моделей (allOf, anyOf, oneOf)
    3. Необходимо отдельно описывать модель (в Models) для того, чтобы использовать её в нескольких конечных точках или других моделях
    4. Наименование моделей должно быть похоже на словосочетание из прилагательного и существительного (например, запись справочника (item directory) - это справочная запись (directoryItem)

    # Соглашение :
    1. NULL не приходят
  contact:
    name: Жуков Николай Александрович
    url: 'https://t.me/Hykers'
    email: nzhukov@phoenixit.ru
  license:
    name: Commercial
    url: 'https://www.example.com'
  summary: OpenAPI спецификация АИС УМД "Метида"
servers:
  - url: 'http://10.125.132.47:30851'
    description: ATK_DEV
  - url: 'http://10.125.132.47:31815/api/integration'
    description: ATK_TEST
  - url: 'http://10.125.132.47:31835'
    description: ATK_LOAD
  - url: X
    description: ATK_DEMO
  - url: 'http://10.125.132.17:8085'
    description: MSX_PHOENIXIT_DEV
  - url: 'http://10.125.132.26:8085'
    description: MSX_PHOENIXIT_TEST
  - url: 'http://10.125.132.29:8085'
    description: MSX_PHOENIXIT_STAGE
  - url: 'https://172.19.3.64:8085'
    description: MSX_MIGR1
  - url: 'http://172.19.3.67:8085'
    description: MSX_MIGR2
  - url: 'http://192.168.190.199:8085'
    description: MSX_UAT
  - url: 'http://172.19.3.34:8085'
    description: MSX_PROD
tags:
  - name: directories
    description: Работа со справочниками
  - name: items
    description: Работа с записями справочника
  - name: v1
    description: Первая версия API
  - name: v2
    description: Вторая версия API
paths:
  /v1/directories:
    get:
      summary: Получение объектов НСИ
      tags:
        - directories
        - v1
      operationId: getDirectoriesV1
      description: |-
        **Постраничное получение актуальных версий справочников и классификаторов**


        Особенности фильтрации

        1. Фильтр может использовать один параметр или несколько. Для фильтрации по нескольким параметрам необходимо несколько раз указать Query Parameter `filter`, соединив их символом `&`.
        2. Синтаксис значения Query Parameter `filter` следующий `operator,property,value`
        3. Оператором могут быть следующие значения:
           * `GT` - больше;
           * `GE` - больше или равно;
           * `LT` - меньше;
           * `LE` - меньше или равно;
           * `EQ` - равно (полное совпадение);
           * `NE` - не равно;
           * `EQ_IGNORE_CASE` - равно (полное совпадение без учёта регистра);
           * `STARTS_WITH` - начинается с;
           * `ENDS_IN` - оканчивается на;
           * `IN` - список значений (полное совпадение со всеми);
           * `LIKE` - равно (частичное совпадение);
           * `NOT_LIKE` - не равно (частичное совпадение);
           * `LIKE_IGNORE_CASE` - равно (частичное совпадение без учёта регистра);
           * `NOT_LIKE_IGNORE_CASE` - не равно (частичное совпадение без учёта регистра);
           * `FTS` - полнотекстовый поиск;
           * `IS_NULL` - отсутствие значения.
        4. Свойством могут быть следующие значения:
           * `name.<language>` - указание, что фильтрация по наименованию объекта НСИ
           * `code` - указание, что фильтрация по коду объекта НСИ
           * `statusModel`- указание, что фильтрация по коду статусной модели объекта НСИ
           * `typeCode`- указание, что фильтрация по коду типа объекта НСИ
           * `dataTypeCode`- указание, что фильтрация по коду типа данных объекта НСИ
        5. `<language>` необходимо указывать для значений, являющихся текстом. `<language>` может принимать следующие значения: `rus`, `eng`, `tur`, `byDefault`
        6. Значением могут быть следующие значения:
           * Зарезервированные в URL символы: "! * ' ( ) ; : @ & = + $ , / ? % # [ ]"
           * Не зарезервированные в URL символы: "[A-Z] [a-z] [0-9] - _ . ~"
           * Иные символы в формате URL encoding
           * для параметра `statusModel`- DEFAULT (стандартная), COUNTERPARTIES (контрагенты)
           * для параметра `typeCode`- INTERNAL (внутренний), EXTERNAL (внешний), LOCAL (локальный)
           * для параметра `dataTypeCode`- MASTER (основные), REFERENCE (справочные), CLASSIFIER (классифицированные)
           
        Примеры

        * filter=EQ,name.rus,Материально-технические ресурсы
        * filter=EQ,code,mtr
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filterV1'
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/DirectoryV1'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '414':
          $ref: '#/components/responses/414-uri-long'
        '500':
          $ref: '#/components/responses/500-server-error'
    parameters: []
  /v1/directories/filter:
    parameters: []
    post:
      summary: Получение отфильтрованных объектов НСИ
      operationId: postDirectoriesV1
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/DirectoryV1'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '500':
          $ref: '#/components/responses/500-server-error'
      description: Постраничное получение отфильтрованных актуальных версий справочников и классификаторов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterV1'
      tags:
        - directories
        - v1
  '/v1/directories/{directoryCode}':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
    get:
      summary: Получение объекта НСИ
      tags:
        - directories
        - v1
      responses:
        '200':
          description: Успех
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/DirectoryV1'
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getDirectory
      description: Получение актуальной версии конкретного справочника или классификатора
  '/v1/directories/{directoryCode}/items':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
    get:
      summary: Получение элементов объекта НСИ
      tags:
        - items
        - v1
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV1'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV1'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '414':
          $ref: '#/components/responses/414-uri-long'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemsV1
      description: |
        **Постраничное получение актуальных версий записей или классов**


        Особенности фильтрации

        1. Фильтр может использовать один параметр или несколько. Для фильтрации по нескольким параметрам необходимо несколько раз указать Query Parameter `filter`, соединив их символом `&`.
        2. Синтаксис значения Query Parameter `filter` следующий `operator,property,value`
        3. Оператором могут быть следующие значения:
           * `GT` - больше;
           * `GE` - больше или равно;
           * `LT` - меньше;
           * `LE` - меньше или равно;
           * `EQ` - равно (полное совпадение);
           * `NE` - не равно;
           * `EQ_IGNORE_CASE` - равно (полное совпадение без учёта регистра);
           * `STARTS_WITH` - начинается с;
           * `ENDS_IN` - оканчивается на;
           * `IN` - список значений (полное совпадение со всеми);
           * `LIKE` - равно (частичное совпадение);
           * `NOT_LIKE` - не равно (частичное совпадение);
           * `LIKE_IGNORE_CASE` - равно (частичное совпадение без учёта регистра);
           * `NOT_LIKE_IGNORE_CASE` - не равно (частичное совпадение без учёта регистра);
           * `FTS` - полнотекстовый поиск;
           * `IS_NULL` - отсутствие значения.
        4. Свойством могут быть следующие значения:
           * `name.<language>` - указание, что фильтрация по наименованию элемента
           * `code` - указание, что фильтрация по коду элемента
           * `attributeValueCode.<attributeCode>.<language>` - указание, что фильтрация по значению атрибута
        5. `<language>` необходимо указывать для значений, являющихся текстом. `<language>` может принимать следующие значения: `rus`, `eng`, `tur`, `byDefault`
        6. Значением могут быть следующие значения:
           * Зарезервированные в URL символы: "! * ' ( ) ; : @ & = + $ , / ? % # [ ]"
           * Не зарезервированные в URL символы: "[A-Z] [a-z] [0-9] - _ . ~"
           * Иные символы в формате URL encoding
           * JSON объект в формате URL encoding, когда атрибут имеет тип ссылка: `{"code": "name", "directoryCode": "name"}`

        Примеры

        * filter=EQ,attributeValueCode.positions,{"code": "CHIEF_STATE_ENGINEER-INSPECTOR", "directoryCode": "positions"}
        * filter=EQ,attributeValueCode.inspection.rus,87
        * filter=EQ,name.rus,Руководитель службы
        * filter=EQ,code,CHIEF_STATE_ENGINEER-INSPECTOR_87
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filterV1'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  '/v1/directories/{directoryCode}/items/{itemCode}':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/itemCode'
    get:
      summary: Получение элемента
      tags:
        - items
        - v1
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesV1'
                  - $ref: '#/components/schemas/ItemWithAttributesV1'
                description: Один из объектов (в зависимости от значения includeAttributes)
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemV1
      description: Получение актуальной версии конкретной записи или класса
      parameters:
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
      x-stoplight:
        id: 1uj5x51inuvla
  /v2/directories:
    get:
      summary: Получение объектов НСИ
      tags:
        - directories
        - v2
      operationId: getDirectoriesV2
      description: |-
        **Постраничное получение актуальных версий справочников и классификаторов**


        Особенности фильтрации

        1. Фильтр может использовать один параметр или несколько. Для фильтрации по нескольким параметрам необходимо несколько раз указать Query Parameter `filterObject`, соединив их символом `&`.
        2. Синтаксис значения Query Parameter `filterObject` следующий `operator,property,value`
        3. Оператором могут быть следующие значения:
           * `GT` - больше;
           * `GE` - больше или равно;
           * `LT` - меньше;
           * `LE` - меньше или равно;
           * `EQ` - равно (полное совпадение);
           * `NE` - не равно;
           * `EQ_IGNORE_CASE` - равно (полное совпадение без учёта регистра);
           * `STARTS_WITH` - начинается с;
           * `ENDS_IN` - оканчивается на;
           * `IN` - список значений (полное совпадение со всеми);
           * `LIKE` - равно (частичное совпадение);
           * `NOT_LIKE` - не равно (частичное совпадение);
           * `LIKE_IGNORE_CASE` - равно (частичное совпадение без учёта регистра);
           * `NOT_LIKE_IGNORE_CASE` - не равно (частичное совпадение без учёта регистра);
           * `FTS` - полнотекстовый поиск;
           * `IS_NULL` - отсутствие значения.
        4. Свойством могут быть следующие значения:
           * `name.<language>` - указание, что фильтрация по наименованию объекта НСИ
           * `code` - указание, что фильтрация по коду объекта НСИ
           * `statusModel`- указание, что фильтрация по коду статусной модели объекта НСИ
           * `typeCode`- указание, что фильтрация по коду типа объекта НСИ
           * `dataTypeCode`- указание, что фильтрация по коду типа данных объекта НСИ
           * `hierarchical`- указание, что фильтрация по признаку иерархии объекта НСИ
           * `versionUuid`- указание, что фильтрация по версии объекта НСИ
           * `validFrom`- указание, что фильтрация по дате и времени начала действия версии объекта НСИ
           * `validTo`- указание, что фильтрация по дате и времени окончания действия версии объекта НСИ
        5. `<language>` необходимо указывать для значений, являющихся текстом. `<language>` может принимать следующие значения: `rus`, `eng`, `tur`, `byDefault`
        6. Значением могут быть следующие значения:
           * Зарезервированные в URL символы: "! * ' ( ) ; : @ & = + $ , / ? % # [ ]"
           * Не зарезервированные в URL символы: "[A-Z] [a-z] [0-9] - _ . ~"
           * Иные символы в формате URL encoding
           * для параметра `statusModel`- DEFAULT (стандартная), COUNTERPARTIES (контрагенты)
           * для параметра `typeCode`- INTERNAL (внутренний), EXTERNAL (внешний), LOCAL (локальный)
           * для параметра `dataTypeCode`- MASTER (основные), REFERENCE (справочные), CLASSIFIER (классифицированные)
           
        Примеры

        * filter=EQ,name.rus,Материально-технические ресурсы
        * filter=EQ,code,mtr
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filterV2'
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/DirectoryV2'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '414':
          $ref: '#/components/responses/414-uri-long'
        '500':
          $ref: '#/components/responses/500-server-error'
      x-stoplight:
        id: wfb234z1e9xya
    parameters: []
  /v2/directories/filter:
    parameters: []
    post:
      summary: Получение отфильтрованных объектов НСИ
      operationId: postDirectoriesV2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/DirectoryV2'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '500':
          $ref: '#/components/responses/500-server-error'
      description: Постраничное получение отфильтрованных актуальных версий справочников и классификаторов
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterV2'
      tags:
        - directories
        - v2
  '/v2/directories/{directoryCode}':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
    get:
      summary: Получение объекта НСИ
      tags:
        - directories
        - v2
      responses:
        '200':
          description: Успех
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/DirectoryV2'
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getDirectoryV2
      description: Получение актуальной версии конкретного справочника или классификатора
      x-stoplight:
        id: orf0sbylj782d
  '/v2/directories/{directoryCode}/versions':
    get:
      summary: Получение версий объекта НСИ
      tags:
        - directories
        - v2
      operationId: getDirectoryVersionsV2
      description: Постраничное получение всех версий справочника или классификатора
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/DirectoryV2'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '414':
          $ref: '#/components/responses/414-uri-long'
        '500':
          $ref: '#/components/responses/500-server-error'
      x-stoplight:
        id: taf2y3zk3hmyx
    parameters:
      - $ref: '#/components/parameters/directoryCode'
  '/v2/directories/{directoryCode}/versions/{versionUuid}':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/versionUuid'
    get:
      summary: Получение версии объекта НСИ
      tags:
        - directories
        - v2
      responses:
        '200':
          description: Успех
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/DirectoryV2'
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getDirectoryVersionV2
      description: Получение конкретной версии справочника или классификатора
      x-stoplight:
        id: rulsl1nqiybiz
  '/v2/directories/{directoryCode}/items':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
    get:
      summary: Получение элементов
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV2'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV2'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '414':
          $ref: '#/components/responses/414-uri-long'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemsV2
      description: |
        **Постраничное получение актуальных версий записей или классов**

        При иерархическом объекте НСИ получение только 1-ого уровня иерархии записей или классов


        Особенности фильтрации

        1. Фильтр может использовать один параметр или несколько. Для фильтрации по нескольким параметрам необходимо несколько раз указать Query Parameter `filter`, соединив их символом `&`.
        2. Синтаксис значения Query Parameter `filter` следующий `operator,property,value`
        3. Оператором могут быть следующие значения:
           * `GT` - больше;
           * `GE` - больше или равно;
           * `LT` - меньше;
           * `LE` - меньше или равно;
           * `EQ` - равно (полное совпадение);
           * `NE` - не равно;
           * `EQ_IGNORE_CASE` - равно (полное совпадение без учёта регистра);
           * `STARTS_WITH` - начинается с;
           * `ENDS_IN` - оканчивается на;
           * `IN` - список значений (полное совпадение со всеми);
           * `LIKE` - равно (частичное совпадение);
           * `NOT_LIKE` - не равно (частичное совпадение);
           * `LIKE_IGNORE_CASE` - равно (частичное совпадение без учёта регистра);
           * `NOT_LIKE_IGNORE_CASE` - не равно (частичное совпадение без учёта регистра);
           * `FTS` - полнотекстовый поиск;
           * `IS_NULL` - отсутствие значения.
        4. Свойством могут быть следующие значения:
           * `name.<language>` - указание, что фильтрация по наименованию элемента
           * `code` - указание, что фильтрация по коду элемента
           * `attributeValueCode.<attributeCode>.<language>` - указание, что фильтрация по значению атрибута
        5. `<language>` необходимо указывать для значений, являющихся текстом. `<language>` может принимать следующие значения: `rus`, `eng`, `tur`, `byDefault`
        6. Значением могут быть следующие значения:
           * Зарезервированные в URL символы: "! * ' ( ) ; : @ & = + $ , / ? % # [ ]"
           * Не зарезервированные в URL символы: "[A-Z] [a-z] [0-9] - _ . ~"
           * Иные символы в формате URL encoding
           * JSON объект в формате URL encoding, когда атрибут имеет тип ссылка: `{"code": "name", "directoryCode": "name"}`

        Примеры

        * filter=EQ,attributeValueCode.positions,{"code": "CHIEF_STATE_ENGINEER-INSPECTOR", "directoryCode": "positions"}
        * filter=EQ,attributeValueCode.inspection.rus,87
        * filter=EQ,name.rus,Руководитель службы
        * filter=EQ,code,CHIEF_STATE_ENGINEER-INSPECTOR_87
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filterV1'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  '/v2/directories/{directoryCode}/items/{itemCode}':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/itemCode'
    get:
      summary: Получение элемента
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesV2'
                  - $ref: '#/components/schemas/ItemWithAttributesV2'
                description: Один из объектов (в зависимости от значения includeAttributes)
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemV2
      description: Получение актуальной версии конкретной записи или класса
      parameters:
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
        - $ref: '#/components/parameters/validAt'
      x-stoplight:
        id: 1uj5x51inuvla
  '/v2/directories/{directoryCode}/items/{itemCode}/versions':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/itemCode'
    get:
      summary: Получение версий элемента
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV2'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV2'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemVersionsV2
      description: Постраничное получение всех версий записи или класса
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  '/v2/directories/{directoryCode}/items/{itemCode}/parents':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/itemCode'
    get:
      summary: Получение элементов-предков
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV2'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV2'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemParentsV2
      description: Постраничное получение актуальных версий записей или классов предков
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  '/v2/directories/{directoryCode}/items/{itemCode}/children':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/itemCode'
    get:
      summary: Получение элементов-детей
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV2'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV2'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemChildrenV2
      description: Постраничное получение актуальных версий записей или классов детей с шагом в один уровень иерархии
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  '/v2/directories/{directoryCode}/items/{itemCode}/versions/{versionUuid}':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/itemCode'
      - $ref: '#/components/parameters/versionUuid'
    get:
      summary: Получение версии элемента
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesV2'
                  - $ref: '#/components/schemas/ItemWithAttributesV2'
                description: Один из объектов (в зависимости от значения includeAttributes)
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemVersionV2
      description: Получение конкретной версии записи или класса
      parameters:
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
      x-stoplight:
        id: 1uj5x51inuvla
  '/v2/directories/{directoryCode}/items/{itemCode}/versions/{versionUuid}/parents':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/itemCode'
      - $ref: '#/components/parameters/versionUuid'
    get:
      summary: Получение элементов-предков версии элемента
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV2'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV2'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemVersionParentsV2
      description: 'Постраничное получение версий записей или классов предков, актуальных на конретную версию записи или класса'
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  '/v2/directories/{directoryCode}/items/{itemCode}/versions/{versionUuid}/children':
    parameters:
      - $ref: '#/components/parameters/directoryCode'
      - $ref: '#/components/parameters/itemCode'
      - $ref: '#/components/parameters/versionUuid'
    get:
      summary: Получение элементов-детей версии элемента
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV2'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV2'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getItemVersionChildrenV2
      description: 'Постраничное получение версий записей или классов детей с шагом в один уровень иерархии, актуальных на конретную версию записи или класса'
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  '/v2/directories/{directoryCode}/item-versions/{versionUuid}':
    parameters:
      - name: directoryCode
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 500
          example: contractor
        description: Уникальный код объекта НСИ в рамках Системы
      - name: versionUuid
        in: path
        schema:
          type: string
          format: uuid
          example: 73d69dee-33be-4748-9ba3-ed4175da98c6
        description: Глобальный уникальный идентификатор версии объекта или элемента НСИ
        required: true
    get:
      summary: Получение версии элемента
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesV2'
                  - $ref: '#/components/schemas/ItemWithAttributesV2'
                description: Один из объектов (в зависимости от значения includeAttributes)
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getVersionV2
      description: Получение конкретной версии записи или класса
      parameters:
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
      x-stoplight:
        id: 1uj5x51inuvla
  '/v2/directories/{directoryCode}/item-versions/{versionUuid}/parents':
    parameters:
      - name: directoryCode
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 500
          example: contractor
        description: Уникальный код объекта НСИ в рамках Системы
      - name: versionUuid
        in: path
        schema:
          type: string
          format: uuid
          example: 73d69dee-33be-4748-9ba3-ed4175da98c6
        description: Глобальный уникальный идентификатор версии объекта или элемента НСИ
        required: true
    get:
      summary: Получение элементов-предков версии элемента
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV2'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV2'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getVersionParentsV2
      description: 'Постраничное получение версий записей или классов предков, актуальных на конретную версию записи или класса'
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  '/v2/directories/{directoryCode}/item-versions/{versionUuid}/children':
    parameters:
      - name: directoryCode
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 500
          example: contractor
        description: Уникальный код объекта НСИ в рамках Системы
      - name: versionUuid
        in: path
        schema:
          type: string
          format: uuid
          example: 73d69dee-33be-4748-9ba3-ed4175da98c6
        description: Глобальный уникальный идентификатор версии объекта или элемента НСИ
        required: true
    get:
      summary: Получение элементов-детей версии элемента
      tags:
        - items
        - v2
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollectionV2'
                  - $ref: '#/components/schemas/ItemWithAttributesCollectionV2'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          $ref: '#/components/responses/404-not-found'
        '500':
          $ref: '#/components/responses/500-server-error'
      operationId: getVersionChildrenV2
      description: 'Постраничное получение версий записей или классов детей с шагом в один уровень иерархии, актуальных на конретную версию записи или класса'
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Токен доступа
  schemas:
    DirectoryV1:
      type: object
      title: Объект НСИ
      description: 'Объект НСИ со справочными, основными или классифицированными данными'
      properties:
        code:
          type: string
          example: material_and_technical_resources
          description: Уникальный код в рамках Системы
          readOnly: true
        statusModel:
          type: string
          enum:
            - COUNTERPARTIES
            - DEFAULT
          description: Код статусной модели
          readOnly: true
        typeCode:
          x-stoplight:
            id: rhcfjigdxatjm
          enum:
            - INTERNAL
            - EXTERNAL
            - LOCAL
          description: 'Тип. Значения: INTERNAL (внутренний), EXTERNAL (внешний), LOCAL (локальный)'
          readOnly: true
        dataTypeCode:
          description: 'Тип данных. Значения: MASTER (основные), REFERENCE (справочные), CLASSIFIER (классифицированные)'
          enum:
            - MASTER
            - REFERENCE
            - CLASSIFIER
          readOnly: true
        name:
          type: object
          description: Наименование
          additionalProperties: false
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              minLength: 1
              maxLength: 500
              example: Материально-технические ресурсы
              description: на русском языке
              readOnly: true
            rus:
              type: string
              minLength: 1
              maxLength: 500
              example: Материально-технические ресурсы
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              example: Material and technical resources
              description: на английском языке
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              example: Malzeme ve teknik kaynaklar
              description: на турецком языке
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
      required:
        - code
        - typeCode
        - dataTypeCode
        - name
      readOnly: true
    DirectoryV2:
      type: object
      title: Объект НСИ
      description: 'Объект НСИ со справочными, основными или классифицированными данными'
      properties:
        code:
          type: string
          example: material_and_technical_resources
          description: Уникальный код в рамках Системы
          readOnly: true
        versionUuid:
          type: string
          x-stoplight:
            id: ly8b6n44462c3
          format: uuid
          example: 2e301dfb-a065-4374-b586-a1840bf1d147
          description: Глобальный уникальный идентификатор версии в рамках Системы
          readOnly: true
        statusModel:
          type: string
          enum:
            - COUNTERPARTIES
            - DEFAULT
          description: Код статусной модели
          readOnly: true
        typeCode:
          x-stoplight:
            id: k7embwwfizb1r
          enum:
            - INTERNAL
            - EXTERNAL
            - LOCAL
          description: 'Тип. Значения: INTERNAL (внутренний), EXTERNAL (внешний), LOCAL (локальный)'
          readOnly: true
        dataTypeCode:
          x-stoplight:
            id: odc7ggalcb1h0
          description: 'Тип данных. Значения: MASTER (основные), REFERENCE (справочные), CLASSIFIER (классифицированные)'
          enum:
            - MASTER
            - REFERENCE
            - CLASSIFIER
          readOnly: true
        hierarchical:
          type: boolean
          x-stoplight:
            id: s9i48nh44disn
          description: Признак иерархии
          readOnly: true
        name:
          type: object
          description: Наименование
          additionalProperties: false
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              minLength: 1
              maxLength: 500
              example: Материально-технические ресурсы
              description: на русском языке
              readOnly: true
            rus:
              type: string
              minLength: 1
              maxLength: 500
              example: Материально-технические ресурсы
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              example: Material and technical resources
              description: на английском языке
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              example: Malzeme ve teknik kaynaklar
              description: на турецком языке
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        validFrom:
          type: string
          x-stoplight:
            id: 3qwkruwld5nqy
          format: date-time
          description: Дата и время начала действия
          example: '2023-06-15 15:35:17.128882+00'
          readOnly: true
        validTo:
          type: string
          x-stoplight:
            id: k30bnxp8o03tu
          format: date-time
          description: Дата и время окончания действия
          example: '2023-07-07 13:29:59.522586+00'
          readOnly: true
      required:
        - code
        - versionUuid
        - typeCode
        - dataTypeCode
        - hierarchical
        - name
        - validFrom
      readOnly: true
    ItemWithAttributesCollectionV1:
      title: Коллекция элементов с атрибутами
      type: object
      description: Коллекция записей с атрибутами или коллекция классов без атрибутов
      properties:
        attributes:
          type: array
          description: Атрибуты записей (на странице)
          items:
            $ref: '#/components/schemas/Attribute'
          readOnly: true
        wrapper:
          type: object
          description: Пагинация и записи
          required:
            - content
            - pageable
            - sort
            - totalPages
            - totalElements
            - last
            - first
            - numberOfElements
            - size
            - number
            - empty
          properties:
            content:
              type: array
              description: 'Коллекция записей, соотвествующих одному из объектов записи (в зависимости от значения dataSet)'
              items:
                oneOf:
                  - $ref: '#/components/schemas/FullDirectoryItemV1'
                  - $ref: '#/components/schemas/DefaultDirectoryItemV1'
                  - $ref: '#/components/schemas/ShortDirectoryItemV1'
                  - $ref: '#/components/schemas/AllDirectoryClassV1'
              readOnly: true
            pageable:
              type: object
              description: Параметры пагинации данных
              properties:
                sort:
                  type: object
                  description: Параметры сортировки
                  properties:
                    sorted:
                      type: boolean
                      description: 'Признак наличия сортировки, заданной пользователем'
                      example: false
                    unsorted:
                      type: boolean
                      description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                      example: true
                    empty:
                      type: boolean
                      description: Признак наличия сортировки
                      example: true
                pageSize:
                  type: integer
                  format: int32
                  description: Количество элементов на странице
                  example: 20
                pageNumber:
                  type: integer
                  format: int32
                  description: Номер отображаемой страницы
                  example: 20
                offset:
                  type: integer
                  format: int32
                  description: Смещение по отношению к первой странице с учётом её размера
                  example: 20
                paged:
                  type: boolean
                  description: Признак постраничного отображения данных
                  example: true
                unpaged:
                  type: boolean
                  description: Признак отсутствия постраничного отображения данных
                  example: false
            sort:
              type: object
              description: Параметры сортировки
              properties:
                sorted:
                  type: boolean
                  description: 'Признак наличия сортировки, заданной пользователем'
                  example: false
                unsorted:
                  type: boolean
                  description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                  example: true
                empty:
                  type: boolean
                  description: Признак наличия сортировки
                  example: true
            totalPages:
              type: integer
              format: int32
              description: Общее количество всех страниц
              example: 1
            totalElements:
              type: integer
              format: int32
              description: Общее количество всех элементов
              example: 17
            last:
              type: boolean
              description: Признак первой страницы
              example: true
            first:
              type: boolean
              description: Признак последней страницы
              example: true
            numberOfElements:
              type: integer
              format: int32
              description: Количество элементов на странице - фактическое
              example: 17
            size:
              type: integer
              format: int32
              description: Количество элементов на странице
              example: 20
            number:
              type: integer
              format: int32
              description: Номер отображаемой страницы
              example: 0
            empty:
              type: boolean
              description: Признак наличия content
              example: true
          readOnly: true
      required:
        - attributes
        - wrapper
      readOnly: true
    ItemWithAttributesCollectionV2:
      title: Коллекция элементов с атрибутами
      type: object
      description: Коллекция записей с атрибутами или коллекция классов без атрибутов
      properties:
        attributes:
          type: array
          description: Атрибуты записей (на странице)
          items:
            $ref: '#/components/schemas/Attribute'
          readOnly: true
        wrapper:
          type: object
          description: Пагинация и записи
          required:
            - content
            - pageable
            - sort
            - totalPages
            - totalElements
            - last
            - first
            - numberOfElements
            - size
            - number
            - empty
          properties:
            content:
              type: array
              description: 'Коллекция записей, соотвествующих одному из объектов записи (в зависимости от значения dataSet)'
              items:
                oneOf:
                  - $ref: '#/components/schemas/FullDirectoryItemV2'
                  - $ref: '#/components/schemas/DefaultDirectoryItemV2'
                  - $ref: '#/components/schemas/ShortDirectoryItemV2'
                  - $ref: '#/components/schemas/AllDirectoryClassV2'
              readOnly: true
            pageable:
              type: object
              description: Параметры пагинации данных
              properties:
                sort:
                  type: object
                  description: Параметры сортировки
                  properties:
                    sorted:
                      type: boolean
                      description: 'Признак наличия сортировки, заданной пользователем'
                      example: false
                    unsorted:
                      type: boolean
                      description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                      example: true
                    empty:
                      type: boolean
                      description: Признак наличия сортировки
                      example: true
                pageSize:
                  type: integer
                  format: int32
                  description: Количество элементов на странице
                  example: 20
                pageNumber:
                  type: integer
                  format: int32
                  description: Номер отображаемой страницы
                  example: 20
                offset:
                  type: integer
                  format: int32
                  description: Смещение по отношению к первой странице с учётом её размера
                  example: 20
                paged:
                  type: boolean
                  description: Признак постраничного отображения данных
                  example: true
                unpaged:
                  type: boolean
                  description: Признак отсутствия постраничного отображения данных
                  example: false
            sort:
              type: object
              description: Параметры сортировки
              properties:
                sorted:
                  type: boolean
                  description: 'Признак наличия сортировки, заданной пользователем'
                  example: false
                unsorted:
                  type: boolean
                  description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                  example: true
                empty:
                  type: boolean
                  description: Признак наличия сортировки
                  example: true
            totalPages:
              type: integer
              format: int32
              description: Общее количество всех страниц
              example: 1
            totalElements:
              type: integer
              format: int32
              description: Общее количество всех элементов
              example: 17
            last:
              type: boolean
              description: Признак первой страницы
              example: true
            first:
              type: boolean
              description: Признак последней страницы
              example: true
            numberOfElements:
              type: integer
              format: int32
              description: Количество элементов на странице - фактическое
              example: 17
            size:
              type: integer
              format: int32
              description: Количество элементов на странице
              example: 20
            number:
              type: integer
              format: int32
              description: Номер отображаемой страницы
              example: 0
            empty:
              type: boolean
              description: Признак наличия content
              example: true
          readOnly: true
      required:
        - attributes
        - wrapper
      readOnly: true
    ItemWithoutAttributesCollectionV1:
      type: object
      title: Коллекция элементов без атрибутов
      description: Коллекция записей или классов без атрибутов
      examples: []
      properties:
        wrapper:
          type: object
          description: Пагинация и записи
          required:
            - content
            - pageable
            - sort
            - totalPages
            - totalElements
            - last
            - first
            - numberOfElements
            - size
            - number
            - empty
          properties:
            content:
              type: array
              description: 'Коллекция записей, соотвествующих одному из объектов записи (в зависимости от значения dataSet), или классов'
              items:
                oneOf:
                  - $ref: '#/components/schemas/FullDirectoryItemV1'
                  - $ref: '#/components/schemas/DefaultDirectoryItemV1'
                  - $ref: '#/components/schemas/ShortDirectoryItemV1'
                  - $ref: '#/components/schemas/AllDirectoryClassV1'
              readOnly: true
            pageable:
              type: object
              description: Параметры пагинации данных
              properties:
                sort:
                  type: object
                  description: Параметры сортировки
                  properties:
                    sorted:
                      type: boolean
                      description: 'Признак наличия сортировки, заданной пользователем'
                      example: false
                    unsorted:
                      type: boolean
                      description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                      example: true
                    empty:
                      type: boolean
                      description: Признак наличия сортировки
                      example: true
                pageSize:
                  type: integer
                  format: int32
                  description: Количество элементов на странице
                  example: 20
                pageNumber:
                  type: integer
                  format: int32
                  description: Номер отображаемой страницы
                  example: 20
                offset:
                  type: integer
                  format: int32
                  description: Смещение по отношению к первой странице с учётом её размера
                  example: 20
                paged:
                  type: boolean
                  description: Признак постраничного отображения данных
                  example: true
                unpaged:
                  type: boolean
                  description: Признак отсутствия постраничного отображения данных
                  example: false
            sort:
              type: object
              description: Параметры сортировки
              properties:
                sorted:
                  type: boolean
                  description: 'Признак наличия сортировки, заданной пользователем'
                  example: false
                unsorted:
                  type: boolean
                  description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                  example: true
                empty:
                  type: boolean
                  description: Признак наличия сортировки
                  example: true
            totalPages:
              type: integer
              format: int32
              description: Общее количество всех страниц
              example: 1
            totalElements:
              type: integer
              format: int32
              description: Общее количество всех элементов
              example: 17
            last:
              type: boolean
              description: Признак первой страницы
              example: true
            first:
              type: boolean
              description: Признак последней страницы
              example: true
            numberOfElements:
              type: integer
              format: int32
              description: Количество элементов на странице - фактическое
              example: 17
            size:
              type: integer
              format: int32
              description: Количество элементов на странице
              example: 20
            number:
              type: integer
              format: int32
              description: Номер отображаемой страницы
              example: 0
            empty:
              type: boolean
              description: Признак наличия content
              example: true
          readOnly: true
      required:
        - wrapper
      readOnly: true
    ItemWithoutAttributesCollectionV2:
      type: object
      title: Коллекция элементов без атрибутов
      description: Коллекция записей или классов без атрибутов
      examples: []
      properties:
        wrapper:
          type: object
          description: Пагинация и записи
          required:
            - content
            - pageable
            - sort
            - totalPages
            - totalElements
            - last
            - first
            - numberOfElements
            - size
            - number
            - empty
          properties:
            content:
              type: array
              description: 'Коллекция записей, соотвествующих одному из объектов записи (в зависимости от значения dataSet), или классов'
              items:
                oneOf:
                  - $ref: '#/components/schemas/FullDirectoryItemV2'
                  - $ref: '#/components/schemas/DefaultDirectoryItemV2'
                  - $ref: '#/components/schemas/ShortDirectoryItemV2'
                  - $ref: '#/components/schemas/AllDirectoryClassV2'
              readOnly: true
            pageable:
              type: object
              description: Параметры пагинации данных
              properties:
                sort:
                  type: object
                  description: Параметры сортировки
                  properties:
                    sorted:
                      type: boolean
                      description: 'Признак наличия сортировки, заданной пользователем'
                      example: false
                    unsorted:
                      type: boolean
                      description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                      example: true
                    empty:
                      type: boolean
                      description: Признак наличия сортировки
                      example: true
                pageSize:
                  type: integer
                  format: int32
                  description: Количество элементов на странице
                  example: 20
                pageNumber:
                  type: integer
                  format: int32
                  description: Номер отображаемой страницы
                  example: 20
                offset:
                  type: integer
                  format: int32
                  description: Смещение по отношению к первой странице с учётом её размера
                  example: 20
                paged:
                  type: boolean
                  description: Признак постраничного отображения данных
                  example: true
                unpaged:
                  type: boolean
                  description: Признак отсутствия постраничного отображения данных
                  example: false
            sort:
              type: object
              description: Параметры сортировки
              properties:
                sorted:
                  type: boolean
                  description: 'Признак наличия сортировки, заданной пользователем'
                  example: false
                unsorted:
                  type: boolean
                  description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                  example: true
                empty:
                  type: boolean
                  description: Признак наличия сортировки
                  example: true
            totalPages:
              type: integer
              format: int32
              description: Общее количество всех страниц
              example: 1
            totalElements:
              type: integer
              format: int32
              description: Общее количество всех элементов
              example: 17
            last:
              type: boolean
              description: Признак первой страницы
              example: true
            first:
              type: boolean
              description: Признак последней страницы
              example: true
            numberOfElements:
              type: integer
              format: int32
              description: Количество элементов на странице - фактическое
              example: 17
            size:
              type: integer
              format: int32
              description: Количество элементов на странице
              example: 20
            number:
              type: integer
              format: int32
              description: Номер отображаемой страницы
              example: 0
            empty:
              type: boolean
              description: Признак наличия content
              example: true
          readOnly: true
      required:
        - wrapper
      readOnly: true
    ItemWithoutAttributesV1:
      type: object
      description: Запись или класс без атрибутов
      title: Элемент без атрибутов
      properties:
        item:
          oneOf:
            - $ref: '#/components/schemas/FullDirectoryItemV1'
            - $ref: '#/components/schemas/DefaultDirectoryItemV1'
            - $ref: '#/components/schemas/ShortDirectoryItemV1'
            - $ref: '#/components/schemas/AllDirectoryClassV1'
          description: Один из объектов записи (в зависимости от значения dataSet) или класс
      required:
        - item
    ItemWithoutAttributesV2:
      type: object
      description: Запись или класс без атрибутов
      title: Элемент без атрибутов
      properties:
        item:
          oneOf:
            - $ref: '#/components/schemas/FullDirectoryItemV2'
            - $ref: '#/components/schemas/DefaultDirectoryItemV2'
            - $ref: '#/components/schemas/ShortDirectoryItemV2'
            - $ref: '#/components/schemas/AllDirectoryClassV2'
          description: Один из объектов записи (в зависимости от значения dataSet) или класс
      required:
        - item
    ItemWithAttributesV1:
      type: object
      description: Запись с атрибутами или класс без атрибутов
      title: Элемент с атрибутами
      properties:
        attributes:
          type: array
          description: Атрибуты записи
          items:
            $ref: '#/components/schemas/Attribute'
          readOnly: true
        item:
          oneOf:
            - $ref: '#/components/schemas/FullDirectoryItemV1'
            - $ref: '#/components/schemas/DefaultDirectoryItemV1'
            - $ref: '#/components/schemas/ShortDirectoryItemV1'
            - $ref: '#/components/schemas/AllDirectoryClassV1'
          description: Один из объектов записи (в зависимости от значения dataSet)
      required:
        - attributes
        - item
      readOnly: true
    ItemWithAttributesV2:
      type: object
      description: Запись с атрибутами или класс без атрибутов
      title: Элемент с атрибутами
      properties:
        attributes:
          type: array
          description: Атрибуты записи
          items:
            $ref: '#/components/schemas/Attribute'
          readOnly: true
        item:
          oneOf:
            - $ref: '#/components/schemas/FullDirectoryItemV2'
            - $ref: '#/components/schemas/DefaultDirectoryItemV2'
            - $ref: '#/components/schemas/ShortDirectoryItemV2'
            - $ref: '#/components/schemas/AllDirectoryClassV2'
          description: Один из объектов записи (в зависимости от значения dataSet)
      required:
        - attributes
        - item
      readOnly: true
    FullDirectoryItemV1:
      title: Полная запись справочника
      type: object
      description: 'Запись справочника, где есть все атрибуты'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        classifierCode:
          type: string
          description: Уникальный код категории таксономии. Приходит при типе данных справочника - основные (мастер)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        name:
          type: object
          description: Наименования
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
        status:
          type: string
          description: 'Статус - `MASTER_DEFAULT` (эталон), `BLOCKED_DEFAULT` (блокированная), `MASTER_COUNTERPARTIES` (эталон), `IRRELEVANT_COUNTERPARTIES` (неактуальная)'
          example: MASTER_DEFAULT
          enum:
            - MASTER_DEFAULT
            - BLOCKED_DEFAULT
            - MASTER_COUNTERPARTIES
            - IRRELEVANT_COUNTERPARTIES
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки) - `OUTDATED` (Устаревшая), `DUPLICATE` (Дубликат), `INCONSISTENT` (Несоответствующая), `LIQUIDATION` (Ликвидация), `RESTRUCTURING` (Реструктуризация), `REFORM` (Реформирование), `OTHERS` (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        cells:
          type: array
          description: Ячейки записи
          items:
            oneOf:
              - $ref: '#/components/schemas/CellValue'
              - $ref: '#/components/schemas/CellRange'
            description: Один из объектов ячейки (в зависимости от признака "диапазон" у атрибута)
          readOnly: true
      required:
        - code
        - name
        - status
        - cells
    FullDirectoryItemV2:
      title: Полная запись справочника
      type: object
      description: 'Запись справочника, где есть все атрибуты'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        versionUuid:
          type: string
          description: Глобальный уникальный идентификатор версии в рамках Системы
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          format: uuid
          readOnly: true
        parentVersionUuid:
          type: string
          description: Глобальный уникальный идентификатор версии родителя в рамках Системы
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          format: uuid
          readOnly: true
        classifierCode:
          type: string
          description: Уникальный код категории таксономии. Приходит при типе данных справочника - основные (мастер)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        name:
          type: object
          description: Наименования
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
        status:
          type: string
          description: 'Статус - `MASTER_DEFAULT` (эталон), `BLOCKED_DEFAULT` (блокированная), `MASTER_COUNTERPARTIES` (эталон), `IRRELEVANT_COUNTERPARTIES` (неактуальная)'
          example: MASTER_DEFAULT
          enum:
            - MASTER_DEFAULT
            - BLOCKED_DEFAULT
            - MASTER_COUNTERPARTIES
            - IRRELEVANT_COUNTERPARTIES
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки) - `OUTDATED` (Устаревшая), `DUPLICATE` (Дубликат), `INCONSISTENT` (Несоответствующая), `LIQUIDATION` (Ликвидация), `RESTRUCTURING` (Реструктуризация), `REFORM` (Реформирование), `OTHERS` (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        validFrom:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время начала действия
          readOnly: true
        validTo:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время окончания действия
          readOnly: true
        cells:
          type: array
          description: Ячейки записи
          items:
            oneOf:
              - $ref: '#/components/schemas/CellValue'
              - $ref: '#/components/schemas/CellRange'
            description: Один из объектов ячейки (в зависимости от признака "диапазон" у атрибута)
          readOnly: true
      required:
        - code
        - versionUuid
        - name
        - status
        - validFrom
        - cells
    DefaultDirectoryItemV1:
      title: Полная запись справочника
      type: object
      description: 'Запись справочника, где есть только корневые атрибуты'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        classifierCode:
          type: string
          description: Уникальный код категории таксономии. Приходит при типе данных справочника - основные (мастер)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        name:
          type: object
          description: Наименования
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
        status:
          type: string
          description: 'Статус - `MASTER_DEFAULT` (эталон), `BLOCKED_DEFAULT` (блокированная), `MASTER_COUNTERPARTIES` (эталон), `IRRELEVANT_COUNTERPARTIES` (неактуальная)'
          example: MASTER_DEFAULT
          enum:
            - MASTER_DEFAULT
            - BLOCKED_DEFAULT
            - MASTER_COUNTERPARTIES
            - IRRELEVANT_COUNTERPARTIES
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки) - `OUTDATED` (Устаревшая), `DUPLICATE` (Дубликат), `INCONSISTENT` (Несоответствующая), `LIQUIDATION` (Ликвидация), `RESTRUCTURING` (Реструктуризация), `REFORM` (Реформирование), `OTHERS` (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        cells:
          type: array
          description: Ячейки записи
          items:
            oneOf:
              - $ref: '#/components/schemas/CellValue'
              - $ref: '#/components/schemas/CellRange'
            description: Один из объектов ячейки (в зависимости от признака "диапазон" у атрибута)
          readOnly: true
      required:
        - code
        - name
        - status
        - cells
    DefaultDirectoryItemV2:
      title: Полная запись справочника
      type: object
      description: 'Запись справочника, где есть только корневые атрибуты'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        versionUuid:
          type: string
          description: Глобальный уникальный идентификатор версии в рамках Системы
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          format: uuid
          readOnly: true
        parentVersionUuid:
          type: string
          description: Глобальный уникальный идентификатор версии родителя в рамках Системы
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          format: uuid
          readOnly: true
        classifierCode:
          type: string
          description: Уникальный код категории таксономии. Приходит при типе данных справочника - основные (мастер)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        name:
          type: object
          description: Наименования
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
        status:
          type: string
          description: 'Статус - `MASTER_DEFAULT` (эталон), `BLOCKED_DEFAULT` (блокированная), `MASTER_COUNTERPARTIES` (эталон), `IRRELEVANT_COUNTERPARTIES` (неактуальная)'
          example: MASTER_DEFAULT
          enum:
            - MASTER_DEFAULT
            - BLOCKED_DEFAULT
            - MASTER_COUNTERPARTIES
            - IRRELEVANT_COUNTERPARTIES
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки) - `OUTDATED` (Устаревшая), `DUPLICATE` (Дубликат), `INCONSISTENT` (Несоответствующая), `LIQUIDATION` (Ликвидация), `RESTRUCTURING` (Реструктуризация), `REFORM` (Реформирование), `OTHERS` (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        validFrom:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время начала действия
          readOnly: true
        validTo:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время окончания действия
          readOnly: true
        cells:
          type: array
          description: Ячейки записи
          items:
            oneOf:
              - $ref: '#/components/schemas/CellValue'
              - $ref: '#/components/schemas/CellRange'
            description: Один из объектов ячейки (в зависимости от признака "диапазон" у атрибута)
          readOnly: true
      required:
        - code
        - versionUuid
        - name
        - status
        - validFrom
        - cells
    ShortDirectoryItemV1:
      title: Краткая запись справочника
      type: object
      description: 'Запись справочника, где нет атрибутов'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        classifierCode:
          type: string
          description: Уникальный код категории таксономии. Приходит при типе данных справочника - основные (мастер)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        name:
          type: object
          description: Наименования
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
        status:
          type: string
          description: 'Статус - `MASTER_DEFAULT` (эталон), `BLOCKED_DEFAULT` (блокированная), `MASTER_COUNTERPARTIES` (эталон), `IRRELEVANT_COUNTERPARTIES` (неактуальная)'
          example: MASTER_DEFAULT
          enum:
            - MASTER_DEFAULT
            - BLOCKED_DEFAULT
            - MASTER_COUNTERPARTIES
            - IRRELEVANT_COUNTERPARTIES
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки) - `OUTDATED` (Устаревшая), `DUPLICATE` (Дубликат), `INCONSISTENT` (Несоответствующая), `LIQUIDATION` (Ликвидация), `RESTRUCTURING` (Реструктуризация), `REFORM` (Реформирование), `OTHERS` (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
      required:
        - code
        - name
        - status
    ShortDirectoryItemV2:
      title: Краткая запись справочника
      type: object
      description: 'Запись справочника, где нет атрибутов'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        versionUuid:
          type: string
          description: Глобальный уникальный идентификатор версии в рамках Системы
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          format: uuid
          readOnly: true
        parentVersionUuid:
          type: string
          description: Глобальный уникальный идентификатор версии родителя в рамках Системы
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          format: uuid
          readOnly: true
        classifierCode:
          type: string
          description: Уникальный код категории таксономии. Приходит при типе данных справочника - основные (мастер)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        name:
          type: object
          description: Наименования
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
        status:
          type: string
          description: 'Статус - `MASTER_DEFAULT` (эталон), `BLOCKED_DEFAULT` (блокированная), `MASTER_COUNTERPARTIES` (эталон), `IRRELEVANT_COUNTERPARTIES` (неактуальная)'
          example: MASTER_DEFAULT
          enum:
            - MASTER_DEFAULT
            - BLOCKED_DEFAULT
            - MASTER_COUNTERPARTIES
            - IRRELEVANT_COUNTERPARTIES
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки) - `OUTDATED` (Устаревшая), `DUPLICATE` (Дубликат), `INCONSISTENT` (Несоответствующая), `LIQUIDATION` (Ликвидация), `RESTRUCTURING` (Реструктуризация), `REFORM` (Реформирование), `OTHERS` (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        validFrom:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время начала действия
          readOnly: true
        validTo:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время окончания действия
          readOnly: true
      required:
        - code
        - versionUuid
        - name
        - status
        - validFrom
    AllDirectoryClassV1:
      title: Любой класс справочника
      type: object
      description: 'Класс справочника с классифицированными данными (классификатора), где нет атрибутов'
      examples:
        - code: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          versionUuid: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          parentVersionUuid: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          businessCode: '01.3'
          name:
            byDefault: 'Материалы растительные: растения живые, луковицы, клубнелуковицы и корневища, отводки и черенки, грибницы'
            rus: 'Материалы растительные: растения живые, луковицы, клубнелуковицы и корневища, отводки и черенки, грибницы'
            eng: 'Plant materials: living plants, bulbs, tubers and rhizomes, taps and cuttings, fungi'
            tur: 'Bitki malzemeleri: canlı bitkiler, ampuller, yumrular ve rizomlar, musluklar ve çelikler, mantarlar'
            anotherLanguage: ___
          status: MASTER_DEFAULT
          validFrom: '2022-09-01 07:18:10.983153+00'
          validTo: '2022-09-01 07:18:10.983153+00'
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        businessCode:
          type: string
          description: Уникальный в рамках справочника бизнесовый код
          example: '01.3'
          readOnly: true
        name:
          type: object
          description: Наименования
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              example: 'Материалы растительные: растения живые, луковицы, клубнелуковицы и корневища, отводки и черенки, грибницы'
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: 'Материалы растительные: растения живые, луковицы, клубнелуковицы и корневища, отводки и черенки, грибницы'
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: 'Plant materials: living plants, bulbs, tubers and rhizomes, taps and cuttings, fungi'
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: 'Bitki malzemeleri: canlı bitkiler, ampuller, yumrular ve rizomlar, musluklar ve çelikler, mantarlar'
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        status:
          type: string
          description: 'Статус - `MASTER_DEFAULT` (эталон), `BLOCKED_DEFAULT` (блокированная), `MASTER_COUNTERPARTIES` (эталон), `IRRELEVANT_COUNTERPARTIES` (неактуальная)'
          example: MASTER_DEFAULT
          enum:
            - MASTER_DEFAULT
            - BLOCKED_DEFAULT
            - MASTER_COUNTERPARTIES
            - IRRELEVANT_COUNTERPARTIES
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки) - `OUTDATED` (Устаревшая), `DUPLICATE` (Дубликат), `INCONSISTENT` (Несоответствующая), `LIQUIDATION` (Ликвидация), `RESTRUCTURING` (Реструктуризация), `REFORM` (Реформирование), `OTHERS` (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
      required:
        - code
        - name
        - status
    AllDirectoryClassV2:
      title: Любой класс справочника
      type: object
      description: 'Класс справочника с классифицированными данными (классификатора), где нет атрибутов'
      examples:
        - code: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          versionUuid: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          parentVersionUuid: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          businessCode: '01.3'
          name:
            byDefault: 'Материалы растительные: растения живые, луковицы, клубнелуковицы и корневища, отводки и черенки, грибницы'
            rus: 'Материалы растительные: растения живые, луковицы, клубнелуковицы и корневища, отводки и черенки, грибницы'
            eng: 'Plant materials: living plants, bulbs, tubers and rhizomes, taps and cuttings, fungi'
            tur: 'Bitki malzemeleri: canlı bitkiler, ampuller, yumrular ve rizomlar, musluklar ve çelikler, mantarlar'
            anotherLanguage: ___
          status: MASTER_DEFAULT
          validFrom: '2022-09-01 07:18:10.983153+00'
          validTo: '2022-09-01 07:18:10.983153+00'
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        versionUuid:
          type: string
          description: Глобальный уникальный идентификатор версии в рамках Системы
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          format: uuid
          readOnly: true
        parentVersionUuid:
          type: string
          description: Глобальный уникальный идентификатор версии родителя в рамках Системы
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          format: uuid
          readOnly: true
        businessCode:
          type: string
          description: Уникальный в рамках справочника бизнесовый код
          example: '01.3'
          readOnly: true
        name:
          type: object
          description: Наименования
          required:
            - byDefault
          properties:
            byDefault:
              type: string
              example: 'Материалы растительные: растения живые, луковицы, клубнелуковицы и корневища, отводки и черенки, грибницы'
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: 'Материалы растительные: растения живые, луковицы, клубнелуковицы и корневища, отводки и черенки, грибницы'
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: 'Plant materials: living plants, bulbs, tubers and rhizomes, taps and cuttings, fungi'
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: 'Bitki malzemeleri: canlı bitkiler, ampuller, yumrular ve rizomlar, musluklar ve çelikler, mantarlar'
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        status:
          type: string
          description: 'Статус - `MASTER_DEFAULT` (эталон), `BLOCKED_DEFAULT` (блокированная), `MASTER_COUNTERPARTIES` (эталон), `IRRELEVANT_COUNTERPARTIES` (неактуальная)'
          example: MASTER_DEFAULT
          enum:
            - MASTER_DEFAULT
            - BLOCKED_DEFAULT
            - MASTER_COUNTERPARTIES
            - IRRELEVANT_COUNTERPARTIES
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки) - `OUTDATED` (Устаревшая), `DUPLICATE` (Дубликат), `INCONSISTENT` (Несоответствующая), `LIQUIDATION` (Ликвидация), `RESTRUCTURING` (Реструктуризация), `REFORM` (Реформирование), `OTHERS` (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        validFrom:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время начала действия
          readOnly: true
        validTo:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время окончания действия
          readOnly: true
      required:
        - code
        - versionUuid
        - name
        - status
        - validFrom
    Attribute:
      type: object
      title: Атрибут
      examples: []
      description: Атрибут
      properties:
        code:
          type: string
          description: Уникальный в рамках Системы код атрибута
          example: pump_type
          readOnly: true
        name:
          type: object
          description: Наименования атрибута
          properties:
            byDefault:
              type: string
              description: на русском языке
              minLength: 1
              maxLength: 500
              example: Вид насоса
              readOnly: true
            rus:
              type: string
              description: на русском языке
              minLength: 1
              maxLength: 500
              example: Вид насоса
              readOnly: true
            eng:
              type: string
              description: на английском языке
              minLength: 1
              maxLength: 500
              example: Type of pump
              readOnly: true
            tur:
              type: string
              description: на турецком языке
              minLength: 1
              maxLength: 500
              example: tip pompa
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        description:
          type: string
          description: Описание атрибута
          example: Вид насоса в АО "Иларион"
          readOnly: true
        list:
          type: boolean
          description: Признак "Список значений"
          readOnly: true
        enumeration:
          type: boolean
          description: Признак "Перечисление значений"
          readOnly: true
        range:
          type: boolean
          description: Признак "Диапазон значений"
          readOnly: true
        typeCode:
          type: string
          description: Тип значений атрибута
          enum:
            - INT
            - REAL
            - TEXT
            - DATE
            - BOOL
            - CLASSIFIER_ID
            - DIRECTORY_ITEM_ID
          readOnly: true
        enumValues:
          description: Перечисляемые значения. Приходит при enum = true
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/EnumValueString'
              - $ref: '#/components/schemas/EnumValueRef'
              - $ref: '#/components/schemas/EnumValueOther'
          readOnly: true
      required:
        - code
        - name
        - list
        - enumeration
        - range
        - typeCode
      readOnly: true
    CellValue:
      type: object
      title: Ячейка значений
      description: Ячейка без диапазонов
      examples: []
      properties:
        attributeCode:
          type: string
          description: Уникальный в рамках Системы код атрибута
          example: pump_type
          readOnly: true
        values:
          description: 'Значение(я): если атрибут имеет признак список - то массив значений, если не имеет- то одно значение в массиве'
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ValueString'
              - $ref: '#/components/schemas/ValueRef'
              - $ref: '#/components/schemas/ValueOther'
            description: Один из объектов значения (в зависимости от типа)
          readOnly: true
      required:
        - attributeCode
      readOnly: true
    CellRange:
      type: object
      title: Ячейка диапазонов
      description: Ячейка с диапазонами
      examples: []
      properties:
        attributeCode:
          type: string
          description: Уникальный в рамках Системы код атрибута
          example: pump_type
          readOnly: true
        ranges:
          type: array
          description: 'Диапазон(ы): если атрибут имеет признак список - то массив диапазонов, если не имеет- то один диапазон в массиве'
          items:
            $ref: '#/components/schemas/Range'
          readOnly: true
      required:
        - attributeCode
      readOnly: true
    ValueString:
      type: object
      title: Значение строка
      description: Значение атрибута с типом "Строка"
      examples: []
      properties:
        type:
          type: string
          enum:
            - TEXT
          description: Тип данных значения
          readOnly: true
        value:
          type: object
          description: Значение
          properties:
            byDefault:
              type: string
              description: 'на языке по умолчанию, установленном в Системе'
              example: насос
            rus:
              type: string
              description: на русском языке
              example: насос
              readOnly: true
            eng:
              type: string
              description: на английском языке
              example: pump
              readOnly: true
            tur:
              type: string
              description: на турецком языке
              example: pompa
              readOnly: true
            anotherLanguage:
              type: string
              description: на любом другом языке
              example: ___
          readOnly: true
      required:
        - type
        - value
      readOnly: true
    ValueRef:
      type: object
      title: Значение ссылка
      description: Значение атрибута с типом "Ссылка на класс" или "Ссылка на запись"
      examples:
        ValueRefClass:
          $ref: '#/components/examples/ModelValueRefClass'
        ValueRefItem:
          $ref: '#/components/examples/ModelValueRefItem'
      properties:
        type:
          type: string
          enum:
            - CLASSIFIER_ID
            - DIRECTORY_ITEM_ID
          description: Тип данных значения
          readOnly: true
        valueRef:
          description: Значение ссылка (на запись справочника или класс классификатора)
          oneOf:
            - $ref: '#/components/schemas/DirectoryItemRef'
            - $ref: '#/components/schemas/ClassRef'
      required:
        - type
        - valueRef
      readOnly: true
    ValueOther:
      type: object
      title: Остальные значения
      description: 'Значение атрибута с типом "Целочисленное число", "Вещественное число", "Логический признак" или "Дата"'
      examples:
        ValueOther:
          $ref: '#/components/examples/ModelValueOther'
      properties:
        type:
          type: string
          enum:
            - INT
            - REAL
            - DATE
            - BOOL
          description: Тип данных значения
          readOnly: true
        value:
          type:
            - integer
            - number
            - boolean
            - string
          description: Значение
          example: 44
          readOnly: true
      required:
        - type
        - value
      readOnly: true
    ClassRef:
      type: object
      title: Значение ссылка на класс классификатора
      properties:
        classCode:
          type: string
          description: Уникальный в рамках Системы код класса
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
      required:
        - classCode
      readOnly: true
      examples: []
      description: Значение ссылка на класс классификатора
    DirectoryItemRef:
      type: object
      title: Значение ссылка на запись справочника
      properties:
        directoryCode:
          type: string
          description: Уникальный в рамках Системы код справочника
          example: material_and_technical_resources
          readOnly: true
        directoryItemCode:
          type: string
          description: Уникальный в рамках справочника код записи
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
      required:
        - directoryCode
        - directoryItemCode
      readOnly: true
      description: Значение ссылка на запись справочника
      examples: []
    EnumValueString:
      type: object
      title: Перечисляемое значение строка
      description: Перечисляемое значение атрибута с типом "Строка"
      examples: []
      properties:
        type:
          type: string
          enum:
            - TEXT
          description: Тип данных значения
          readOnly: true
        value:
          type: object
          description: Значение
          properties:
            byDefault:
              type: string
              description: 'на языке по умолчанию, установленном в Системе'
              example: насос
            rus:
              type: string
              description: на русском языке
              example: насос
              readOnly: true
            eng:
              type: string
              description: на английском языке
              example: pump
              readOnly: true
            tur:
              type: string
              description: на турецком языке
              example: pompa
              readOnly: true
            anotherLanguage:
              type: string
              description: на любом другом языке
              example: ___
          readOnly: true
      required:
        - type
        - value
      readOnly: true
    EnumValueRef:
      type: object
      title: Перечисляемое значение ссылка
      description: Перечисляемое значение атрибута с типом "Ссылка на класс" или "Ссылка на запись"
      examples:
        - type: CLASSIFIER_ID
          valueRef:
            classCode: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
        - type: DIRECTORY_ITEM_ID
          valueRef:
            directoryCode: material_and_technical_resources
            directoryItemCode: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
      properties:
        type:
          type: string
          enum:
            - CLASSIFIER_ID
            - DIRECTORY_ITEM_ID
          description: Тип данных значения
          readOnly: true
        valueRef:
          description: Значение ссылка (на запись справочника или класс классификатора)
          oneOf:
            - $ref: '#/components/schemas/DirectoryItemRef'
            - $ref: '#/components/schemas/ClassRef'
      required:
        - type
        - valueRef
      readOnly: true
    EnumValueOther:
      type: object
      title: Остальные перечисляемые значения
      description: 'Перечисляемое значение атрибута с типом "Целочисленное число", "Вещественное число", "Логический признак" или "Дата"'
      examples:
        - type: INT
          value: 44
      properties:
        type:
          type: string
          enum:
            - INT
            - REAL
            - DATE
            - BOOL
          description: Тип данных значения
          readOnly: true
        value:
          type:
            - integer
            - number
            - boolean
            - string
          description: Значение
          example: 44
          readOnly: true
      required:
        - type
        - value
      readOnly: true
    Range:
      type: object
      title: Диапазон
      description: Диапазон
      examples:
        examplesRange:
          $ref: '#/components/examples/ModelRange'
      properties:
        value:
          oneOf:
            - $ref: '#/components/schemas/ValueString'
            - $ref: '#/components/schemas/ValueRef'
            - $ref: '#/components/schemas/ValueOther'
          description: Начальное значение диапазона
        alterValue:
          oneOf:
            - $ref: '#/components/schemas/ValueString'
            - $ref: '#/components/schemas/ValueRef'
            - $ref: '#/components/schemas/ValueOther'
          description: Конечное значение диапазона
      required:
        - value
        - alterValue
      readOnly: true
    FilterV1:
      title: Фильтр
      type: object
      description: Фильтр
      properties:
        v:
          type: integer
          x-stoplight:
            id: 88hpyiqizj8mp
          default: 1
          description: Версия фильтра
          writeOnly: true
        filters:
          type: array
          description: Параметр(ы) фильра
          items:
            type: object
            properties:
              property:
                type: string
                example: attributeValueCode.module_code
                description: "Свойство параметра:\r\n- `name.<language>` - указание, что фильтрация по наименованию\r\n- `code` - указание, что фильтрация по коду\r\n- `attributeValueCode.<attributeCode>.<language>` - указание, что фильтрация по значению атрибута\r\n- `statusModel`, `typeCode`, `dataTypeCode` для directory\r\n\r\n`<language>` необходимо указывать для значений, являющихся текстом. `<language>` может принимать следующие значения: `rus`, `eng`, `tur`, `byDefault`"
                writeOnly: true
              operator:
                default: EQ
                enum:
                  - GT
                  - GE
                  - LT
                  - LE
                  - EQ
                  - NE
                  - EQ_IGNORE_CASE
                  - STARTS_WITH
                  - ENDS_IN
                  - IN
                  - LIKE
                  - NOT_LIKE
                  - LIKE_IGNORE_CASE
                  - NOT_LIKE_IGNORE_CASE
                  - FTS
                  - IS_NULL
                description: "Оператор параметра:\r\n   - `GT` - больше;\r\n   - `GE` - больше или равно;\r\n   - `LT` - меньше;\r\n   - `LE` - меньше или равно;\r\n   - `EQ` - равно (полное совпадение);\r\n   - `NE` - не равно;\r\n   - `EQ_IGNORE_CASE` - равно (полное совпадение без учёта регистра);\r\n   - `STARTS_WITH` - начинается с;\r\n   - `ENDS_IN` - оканчивается на;\r\n   - `IN` - список значений (полное совпадение со всеми);\r\n   - `LIKE` - равно (частичное совпадение);\r\n   - `NOT_LIKE` - не равно (частичное совпадение);\r\n   - `LIKE_IGNORE_CASE` - равно (частичное совпадение без учёта регистра);\r\n   - `NOT_LIKE_IGNORE_CASE` - не равно (частичное совпадение без учёта регистра);\r\n   - `FTS` - полнотекстовый поиск;\r\n   - `IS_NULL` - отсутствие значения."
                writeOnly: true
              mainValue:
                oneOf:
                  - type: integer
                    behavior: Write Only
                    description: Значение атрибута с типом "Целочисленное число"
                  - type: number
                    behavior: Write Only
                    description: Значение атрибута с типом "Вещественное число"
                  - type: string
                    behavior: Write Only
                    description: Значение атрибута с типом "Строка" или "Дата"
                  - type: boolean
                    description: Значение атрибута с типом "Логический признак"
                    behavior: Write Only
                  - type: object
                    description: Значение атрибута с типом "Ссылка на класс" или "Ссылка на запись"
                    properties:
                      code:
                        type: string
                        example: licensing
                        description: Уникальный в рамках объекта НСИ код элемента
                        writeOnly: true
                      directoryCode:
                        type: string
                        example: platform_modules
                        description: Уникальный код объекта НСИ в рамках Системы
                        writeOnly: true
                    required:
                      - code
                      - directoryCode
                description: "Значение параметра: \r\n1. если значение-ссылка - то объект,\r\n2. если значение с любым другим типом - то значение:\r\n   - Зарезервированные в URL символы: \"! * ' ( ) ; : @ & = + $ , / ? % # [ ]\"\r\n   - Не зарезервированные в URL символы: \"[A-Z] [a-z] [0-9] - _ . ~\"\r\n   - Иные символы в формате URL encoding"
            required:
              - property
              - operator
              - mainValue
      required:
        - v
        - filters
    FilterV2:
      title: Фильтр
      type: object
      description: Фильтр
      properties:
        filters:
          type: array
          description: Параметр(ы) фильра
          items:
            type: object
            properties:
              property:
                type: string
                example: attributeValueCode.module_code
                description: "Свойство параметра:\r\n- `name.<language>` - указание, что фильтрация по наименованию\r\n- `code` - указание, что фильтрация по коду\r\n- `attributeValueCode.<attributeCode>.<language>` - указание, что фильтрация по значению атрибута\r\n- `statusModel`, `typeCode`, `dataTypeCode` для directory\r\n\r\n`<language>` необходимо указывать для значений, являющихся текстом. `<language>` может принимать следующие значения: `rus`, `eng`, `tur`, `byDefault`"
                writeOnly: true
              operator:
                default: EQ
                enum:
                  - GT
                  - GE
                  - LT
                  - LE
                  - EQ
                  - NE
                  - EQ_IGNORE_CASE
                  - STARTS_WITH
                  - ENDS_IN
                  - IN
                  - LIKE
                  - NOT_LIKE
                  - LIKE_IGNORE_CASE
                  - NOT_LIKE_IGNORE_CASE
                  - FTS
                  - IS_NULL
                description: "Оператор параметра:\r\n   - `GT` - больше;\r\n   - `GE` - больше или равно;\r\n   - `LT` - меньше;\r\n   - `LE` - меньше или равно;\r\n   - `EQ` - равно (полное совпадение);\r\n   - `NE` - не равно;\r\n   - `EQ_IGNORE_CASE` - равно (полное совпадение без учёта регистра);\r\n   - `STARTS_WITH` - начинается с;\r\n   - `ENDS_IN` - оканчивается на;\r\n   - `IN` - список значений (полное совпадение со всеми);\r\n   - `LIKE` - равно (частичное совпадение);\r\n   - `NOT_LIKE` - не равно (частичное совпадение);\r\n   - `LIKE_IGNORE_CASE` - равно (частичное совпадение без учёта регистра);\r\n   - `NOT_LIKE_IGNORE_CASE` - не равно (частичное совпадение без учёта регистра);\r\n   - `FTS` - полнотекстовый поиск;\r\n   - `IS_NULL` - отсутствие значения."
                writeOnly: true
              mainValue:
                oneOf:
                  - type: integer
                    behavior: Write Only
                    description: Значение атрибута с типом "Целочисленное число"
                  - type: number
                    behavior: Write Only
                    description: Значение атрибута с типом "Вещественное число"
                  - type: string
                    behavior: Write Only
                    description: Значение атрибута с типом "Строка" или "Дата"
                  - type: boolean
                    description: Значение атрибута с типом "Логический признак"
                    behavior: Write Only
                  - type: object
                    description: Значение атрибута с типом "Ссылка на класс" или "Ссылка на запись"
                    properties:
                      code:
                        type: string
                        example: licensing
                        description: Уникальный в рамках объекта НСИ код элемента
                        writeOnly: true
                      directoryCode:
                        type: string
                        example: platform_modules
                        description: Уникальный код объекта НСИ в рамках Системы
                        writeOnly: true
                    required:
                      - code
                      - directoryCode
                description: "Значение параметра: \r\n1. если значение-ссылка - то объект,\r\n2. если значение с любым другим типом - то значение:\r\n   - Зарезервированные в URL символы: \"! * ' ( ) ; : @ & = + $ , / ? % # [ ]\"\r\n   - Не зарезервированные в URL символы: \"[A-Z] [a-z] [0-9] - _ . ~\"\r\n   - Иные символы в формате URL encoding"
            required:
              - property
              - operator
              - mainValue
      required:
        - filters
  examples:
    ModelValueOther:
      description: 'Пример значения атрибута с типом "Целочисленное число", "Вещественное число", "Логический признак" или "Дата"'
      value:
        - type: INT
          value: 44
    ModelValueRefClass:
      description: Пример значения ссылки на класс
      value:
        type: CLASSIFIER_ID
        valueRef:
          classCode: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
    ModelValueRefItem:
      description: Пример значения ссылки на запись
      value:
        type: DIRECTORY_ITEM_ID
        valueRef:
          directoryCode: material_and_technical_resources
          directoryItemCode: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
    ModelRange:
      description: Пример диапазона
      value:
        value:
          type: TEXT
          value:
            byDefault: насос
            rus: насос
            eng: pump
            tur: pompa
            anotherLanguage: ___
        alterValue:
          type: TEXT
          value:
            byDefault: насос
            rus: насос
            eng: pump
            tur: pompa
            anotherLanguage: ___
  parameters:
    size:
      name: size
      in: query
      required: false
      schema:
        type: integer
        default: 20
        example: 100
        minLength: 1
        maxLength: 1000
        minimum: 1
        maximum: 1000
      description: Требуемое количество элементов на странице
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 0
        example: 1
        minimum: 0
      description: Требуемый номер отображаемой страницы
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        example: 'name,DESC'
        default: 'id,ASC'
      description: Требуемые параметры сортировки
    filterV2:
      name: filterObject
      in: query
      schema:
        type: string
      description: Фильтр второй версии API
      style: form
      explode: true
    filterV1:
      name: filter
      in: query
      schema:
        type: string
      description: Фильтр первой версии API
      style: form
      explode: true
    dataSet:
      name: dataSet
      in: query
      required: false
      schema:
        type: string
        enum:
          - FULL
          - DEFAULT
          - SHORT
        example: FULL
        default: DEFAULT
      description: 'Требуемый набор данных - `полный`, `по умолчанию` и `краткий`. `Полный` набор - запись плоского справочника или справочника с мастер данными, имеет все атрибуты. Набор `по умолчанию` - запись плоского справочника или справочника с мастер данными, где есть атрибуты только корневого класса классификатора. `Краткий` набор - запись плоского справочника или справочника с мастер данными, где нет атрибутов'
    includeAttributes:
      name: includeAttributes
      in: query
      required: false
      schema:
        type: boolean
        default: false
        example: false
      description: Требуемый признак включения атрибутов
    directoryCode:
      name: directoryCode
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 500
        example: contractor
      description: Уникальный код объекта НСИ в рамках Системы
    itemCode:
      name: itemCode
      in: path
      required: true
      schema:
        type: string
        example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
        minLength: 1
        maxLength: 500
      description: Уникальный код элемента в рамках объекта НСИ
    versionUuid:
      name: versionUuid
      in: path
      schema:
        type: string
        format: uuid
        example: 73d69dee-33be-4748-9ba3-ed4175da98c6
      description: Глобальный уникальный идентификатор версии объекта или элемента НСИ
      required: true
    validAt:
      name: validAt
      in: query
      schema:
        type: string
        format: date-time
        example: '2023-06-13T21:24:03.685+0000'
      description: 'Дата и время '
  responses:
    403-forbidden:
      description: Учетной записи недостаточно прав
      content: {}
    401-unauthorized:
      description: Учетная запись не авторизована
      content: {}
    414-uri-long:
      description: 'Слишком длинный URI. Если используется GET с Query parameter `filter`, где много условий - необходимо использовать POST '
      content: {}
    404-not-found:
      description: |-
        Ничего не найдено:
        1. Объекта или элемента НСИ с таким кодом нет вообще
        2. Версии объекта или элемента НСИ с таким идентификатором нет вообще
        3. Нет актуальной версии объекта или элемента НСИ (но объект или элемент НСИ существует)
      content: {}
    500-server-error:
      description: Сервис временно не доступен по причине внутренней ошибки
      content: {}
security:
  - Authorization: []
