openapi: 3.1.0
info:
  title: Metis
  version: '0.1'
  description: |-
    # Правила, использованные при написании OpenAPI:
    1. Все атрибуты должны иметь продуктивный пример - как минимум для понимания того, что может прийти, а как максимум для генерации тестового JSON для проверки ошибок при дизайне спецификации
    2. Необходимо отдельно описывать продуктивный пример модели (в Examples) в следующих случаях (для того, чтобы показать все возможные состояния):
        - если у модели есть атрибут с разными типами данных - например String и Integer
        - eсли у модели есть вилка из других моделей (allOf, anyOf, oneOf)
    3. Необходимо отдельно описывать модель (в Models) для того, чтобы использовать её в нескольких конечных точках или других моделях
    4. Наименование моделей должно быть похоже на словосочетание из прилагательного и существительного (например: запись справочника (item directory) - это справочная запись (directoryItem)
  contact:
    name: Жуков Николай Александрович
    url: 'https://t.me/Hykers'
    email: nzhukov@phoenixit.ru
  license:
    name: Commercial
    url: 'https://www.example.com'
  summary: OpenAPI спецификация АИС УМД "Метида"
servers:
  - url: 'https://metida.at-consulting.ru/api/integration'
    description: ATK_DEMO
  - url: 'http://metis-ui-docker.csp/api/integration'
    description: RA_DEV
  - url: 'http://test.metis.csp/api/integration'
    description: RA_TEST
  - url: 'http://demo1.metis.csp/api/integration'
    description: RA_DEMO1
  - url: 'http://demo2.empiricamdm.csp/api/integration'
    description: RA_DEMO2
  - url: 'http://dev.usmt.phoenixit.ru/nsi/api/integration'
    description: MSX_DEV
tags:
  - name: directories
    description: Работа со справочниками
  - name: items
    description: Работа с записями справочника
  - name: classifiers
    description: Работа с классификаторами
  - name: class
    description: Работа с классами
  - name: attributes
    description: Работа с атрибутами
  - name: proposals
    description: Работа с заявками
paths:
  /v1/classifiers:
    get:
      summary: Получение классификаторов
      tags:
        - classifiers
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Classifier'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: 'Признак наличия сортировки, заданной пользователем'
                            example: false
                          unsorted:
                            type: boolean
                            description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                            example: true
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                            example: true
                      pageSize:
                        type: integer
                        format: int32
                        description: Количество элементов на странице
                        example: 20
                      pageNumber:
                        type: integer
                        format: int32
                        description: Номер отображаемой страницы
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: Смещение по отношению к первой странице с учётом её размера
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                        example: true
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                        example: false
                  totalPages:
                    type: integer
                    format: int32
                    description: Общее количество всех страниц
                    example: 1
                  totalElements:
                    type: integer
                    format: int32
                    description: Общее количество всех элементов
                    example: 17
                  last:
                    type: boolean
                    description: Признак первой страницы
                    example: true
                  first:
                    type: boolean
                    description: Признак последней страницы
                    example: true
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: 'Признак наличия сортировки, заданной пользователем'
                        example: false
                      unsorted:
                        type: boolean
                        description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                        example: true
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                        example: true
                  numberOfElements:
                    type: integer
                    format: int32
                    description: Количество элементов на странице - фактическое
                    example: 17
                  size:
                    type: integer
                    format: int32
                    description: Количество элементов на странице
                    example: 20
                  number:
                    type: integer
                    format: int32
                    description: Номер отображаемой страницы
                    example: 0
                  empty:
                    type: boolean
                    description: Признак наличия content
                    example: true
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - last
                  - first
                  - sort
                  - numberOfElements
                  - size
                  - number
                  - empty
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Внутренняя ошибка сервера
      operationId: getClassifiers
      description: Постраничное получение классификаторов
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filter'
    parameters: []
  '/v1/classifiers/{classifiersCode}':
    parameters:
      - $ref: '#/components/parameters/classifiersCode'
    get:
      summary: Получение классификатора
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Classifier'
                required:
                  - content
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          description: Объект не найден
        '500':
          description: Внутренняя ошибка сервера
      operationId: getClassifier
      description: Получение конкретного классификатора
      tags:
        - classifiers
      parameters: []
  '/v1/classifiers/{classifiersCode}/classes':
    parameters:
      - $ref: '#/components/parameters/classifiersCode'
    get:
      summary: Получение классов классификатора
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '500':
          description: Внутренняя ошибка сервера
      operationId: getClasses
      description: Постраничное получение классов первого уровня конкретного классификатора
      tags:
        - classifiers
      parameters: []
  '/v1/classifiers/{classifiersCode}/classes/{classCode}':
    parameters:
      - $ref: '#/components/parameters/classifiersCode'
      - $ref: '#/components/parameters/classCode'
    get:
      summary: Получение класса классификатора
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Class'
                    x-stoplight:
                      id: iyhzx5zy7nm3r
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          description: Объект не найден
        '500':
          description: Внутренняя ошибка сервера
      operationId: getClass
      description: Получение конкретного класса конкретного классификатора
      parameters: []
      tags:
        - class
  '/v1/classifiers/{classifiersCode}/classes/{classCode}/children':
    parameters:
      - $ref: '#/components/parameters/classifiersCode'
      - $ref: '#/components/parameters/classCode'
    get:
      summary: Получение потомков класса
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '500':
          description: Внутренняя ошибка сервера
      operationId: getClassChildren
      description: 'Постраничное получение классов конкретного классификатора, являющихся прямыми потомками (шаг в один уровень)'
      tags:
        - class
      parameters: []
  '/v1/classifiers/{classifiersCode}/classes/{classCode}/parents':
    parameters:
      - $ref: '#/components/parameters/classifiersCode'
      - $ref: '#/components/parameters/classCode'
    get:
      summary: Получение предков класса
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    oneOf:
                      - $ref: '#/components/schemas/UpClassesHierarchy'
                      - $ref: '#/components/schemas/DownClassesHierarchy'
                    description: Один из объектов (в зависимости от значения direction)
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '500':
          description: Внутренняя ошибка сервера
      operationId: getClassParents
      description: 'Древовидное получение классов конкретного классификатора, являющихся предками (от прямого предка до корня или от корня до прямого предка)'
      parameters:
        - $ref: '#/components/parameters/direction'
      tags:
        - class
  /v1/directories:
    get:
      summary: Получение справочников
      tags:
        - directories
      operationId: getDirectories
      description: Постраничное получение справочников
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Directory'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          description: Not Found
        '500':
          description: Внутренняя ошибка сервера
    parameters: []
  '/v1/directories/{directoryCode}':
    parameters:
      - schema:
          type: string
        name: directoryCode
        in: path
        required: true
        description: Уникальный в рамках Системы код справочника
    get:
      summary: Получение справочника
      tags:
        - directories
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Directory'
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          description: Объект не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  argument:
                    type: string
        '500':
          description: Внутренняя ошибка сервера
      operationId: getDirectory
      description: Получение конкретного справочника
  '/v1/directories/{directoryCode}/items':
    parameters:
      - schema:
          type: string
          example: material_and_technical_resources
        name: directoryCode
        in: path
        required: true
        description: Уникальный в рамках Системы код справочника
    get:
      summary: Получение записей справочника
      tags:
        - items
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributesCollection'
                  - $ref: '#/components/schemas/ItemWithAttributesCollection'
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          description: Объект не найден
        '500':
          description: Внутренняя ошибка сервера
      operationId: getItems
      description: Постраничное получение записей конкретного справочника
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
    post:
      summary: Создание записи в справочнике
      operationId: createItem
      responses:
        '200':
          description: Подтверждение успешного сохранения
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnicalAttributesItem'
              examples: {}
        '400':
          description: Некорректные входные данные.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          description: Not Found
        '422':
          description: Допущена логическая ошибка
        '500':
          description: Внутренняя ошибка сервера
      tags:
        - items
      description: Метод предназначен для сохранения в БД новой записи
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ItemWithAttributes'
                - $ref: '#/components/schemas/ItemWithoutAttributes'
  '/v1/directories/{directoryCode}/items/{itemCode}':
    parameters:
      - schema:
          type: string
          example: material_and_technical_resources
        name: directoryCode
        in: path
        required: true
        description: Уникальный в рамках Системы код справочника
      - schema:
          type: string
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
        name: itemCode
        in: path
        required: true
        description: Уникальный в рамках справочника код записи
    get:
      summary: Получение записи справочника
      tags:
        - items
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemWithoutAttributes'
                  - $ref: '#/components/schemas/ItemWithAttributes'
                description: Один из объектов (в зависимости от значения includeAttributes)
              examples: {}
        '401':
          $ref: '#/components/responses/401-unauthorized'
        '403':
          $ref: '#/components/responses/403-forbidden'
        '404':
          description: Объект не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  argument:
                    type: string
        '500':
          description: Внутренняя ошибка сервера
      operationId: getItem
      description: Получение конкретной записи конкретного справочника
      parameters:
        - $ref: '#/components/parameters/dataSet'
        - $ref: '#/components/parameters/includeAttributes'
  /v1/proposals:
    get:
      summary: Получение списка всех заявок
      tags:
        - proposals
      operationId: getProposals
      description: Постраничное получение заявок Системы
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Proposal'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Внутренняя ошибка сервера
    post:
      summary: Создание заявки
      tags:
        - proposals
      operationId: postProposals
      description: Создание заявки
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Proposal'
                required:
                  - content
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Допущена логическая ошибка
        '500':
          description: Внутренняя ошибка сервера
    parameters: []
  '/v1/proposals/{proposalsId}':
    get:
      summary: Получение заявки
      operationId: getProposal
      description: Получение заявки
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Proposal'
                required:
                  - content
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '500':
          description: Внутренняя ошибка сервера
      tags:
        - proposals
    parameters:
      - schema:
          type: string
        name: proposalsId
        in: path
        required: true
        description: Заявка
  /v1/attributes:
    get:
      summary: Получение атрибутов
      operationId: getAttributes
      tags:
        - attributes
      description: Постраничное получение атрибутов Системы
      parameters:
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Attribute'
                  pageable:
                    type: object
                    description: Параметры пагинации данных
                    properties:
                      sort:
                        type: object
                        description: Параметры сортировки
                        properties:
                          sorted:
                            type: boolean
                            description: Признак наличия сортировки заданной пользователем
                          unsorted:
                            type: boolean
                            description: Признак отсутствия сортировки заданной пользователем
                          empty:
                            type: boolean
                            description: Признак наличия сортировки
                      pageSize:
                        type: integer
                        description: Количество элементов на странице
                        format: int32
                        example: 17
                      pageNumber:
                        type: integer
                        description: Номер отображаемой страницы
                        format: int32
                        example: 1
                      offset:
                        type: integer
                        description: Смещение по отношению к первой странице с учётом её размера
                        format: int32
                        example: 20
                      paged:
                        type: boolean
                        description: Признак постраничного отображения данных
                      unpaged:
                        type: boolean
                        description: Признак отсутствия постраничного отображения данных
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    format: int32
                    example: 1
                  totalElements:
                    type: integer
                    description: Общее количество элеметов
                    format: int32
                    example: 15
                  first:
                    type: boolean
                    description: Признак первой страницы
                  last:
                    type: boolean
                    description: Признак последней страницы
                  sort:
                    type: object
                    description: Параметры сортировки
                    properties:
                      sorted:
                        type: boolean
                        description: Признак наличия сортировки заданной пользователем
                      unsorted:
                        type: boolean
                        description: Признак отсутствия сортировки заданной пользователей
                      empty:
                        type: boolean
                        description: Признак наличия сортировки
                  numberofElements:
                    type: integer
                    description: Количество элементов на странице- фактическое
                    format: int32
                    example: 17
                  size:
                    type: integer
                    description: |
                      Количество элементов на странице
                    format: int32
                    example: 20
                  number:
                    type: integer
                    description: Номер страницы
                    example: 1
                    format: int32
                  empty:
                    type: boolean
                    description: Признак наличия content
                required:
                  - content
                  - pageable
                  - totalPages
                  - totalElements
                  - first
                  - last
                  - sort
                  - numberofElements
                  - size
                  - number
                  - empty
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Внутренняя ошибка сервера
  '/v1/attributes/{attributesCode}':
    parameters:
      - schema:
          type: string
        name: attributesCode
        in: path
        required: true
        description: Атрибут
    get:
      summary: Получение атрибута
      operationId: getAttribute
      description: Получение атрибута
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/Attribute'
                required:
                  - content
              examples: {}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Внутренняя ошибка сервера
      tags:
        - attributes
components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Токен доступа
  schemas:
    Classifier:
      title: Классификатор
      type: object
      description: Классификатор
      examples: []
      properties:
        code:
          type: string
          description: Уникальный код классификатора в рамках системы
          example: okpd2
        name:
          type: object
          description: Наименование классификатора
          properties:
            byDefault:
              type: string
              description: на русском языке
              minLength: 1
              maxLength: 500
              readOnly: true
            rus:
              type: string
              description: на русском языке
              minLength: 1
              maxLength: 500
              example: ОКПД2
              readOnly: true
            eng:
              type: string
              description: на английском языке
              minLength: 1
              maxLength: 500
              example: Pan-Russian product classification by economic activity
              readOnly: true
            tur:
              type: string
              description: на турецком языке
              minLength: 1
              maxLength: 500
              example: Ekonomik faaliyete göre Pan-Rus ürün sınıflandırması
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        type:
          type: string
          format: int32
          x-stoplight:
            id: b55asiek0msiy
          enum:
            - INTERNAL
            - EXTERNAL
            - LOCAL
          default: LOCAL
          description: |-
            Тип классификатора:
            1. LOCAL - ведется в НСИ
            2. INTERNAL - ведется не в НСИ (внутриплатформы)
            3. EXTERNAL - ведется не в НСИ (в интеренете)
        validFrom:
          type: string
          x-stoplight:
            id: ai5hston1qvlz
          description: Дата и время начала действия
          format: date-time
          example: '2023-04-10 15:45:18.300693+00'
          readOnly: true
        validTo:
          type: string
          x-stoplight:
            id: bp1vlx9orsc1r
          description: Дата и время окончания действия
          format: date-time
          readOnly: true
      required:
        - code
        - name
        - type
        - validFrom
    Class:
      title: Класс
      type: object
      description: Класс классификатора
      properties:
        code:
          type: string
          description: Уникальный код класса в рамках классификатора
          example: ee211860-4018-4b9b-8a12-42f6066ef01d
        businessCode:
          type: string
          description: Уникальный в рамках классификатора бизнесовый код класса
          example: 50.10.12.000
        name:
          type: object
          description: Наименование класса
          properties:
            byDefault:
              type: string
              description: на русском языке
              minLength: 1
              maxLength: 500
              readOnly: true
            rus:
              type: string
              description: на русском языке
              minLength: 1
              maxLength: 500
              example: Услуги по заграничным и каботажным перевозкам пассажиров круизными судами
              readOnly: true
            eng:
              type: string
              description: на английском языке
              minLength: 1
              maxLength: 500
              example: Overseas and coastal cruise passenger services
              readOnly: true
            tur:
              type: string
              description: на турецком языке
              minLength: 1
              maxLength: 500
              example: Denizaşırı ve kıyı yolcu hizmetleri
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        validFrom:
          type: string
          description: Дата и время начала действия
          format: date-time
          example: '2023-04-10 15:45:18.300693+00'
          readOnly: true
        validTo:
          type: string
          description: Дата и время окончания действия
          format: date-time
          readOnly: true
      required:
        - code
        - name
        - validFrom
    UpClassesHierarchy:
      oneOf:
        - $ref: '#/components/schemas/Class'
          description: Класс классификатора без предка
        - type: object
          description: Класс классификатора с предком
          properties:
            code:
              type: string
              description: Уникальный код класса в рамках классификатора
              example: ee211860-4018-4b9b-8a12-42f6066ef01d
            businessCode:
              type: string
              description: Уникальный в рамках классификатора бизнесовый код класса
              example: 50.10.12.000
            parentCode:
              $ref: '#/components/schemas/UpClassesHierarchy'
              description: Класс-предок
            name:
              type: object
              description: Наименование класса
              properties:
                byDefault:
                  type: string
                  description: на русском языке
                  minLength: 1
                  maxLength: 500
                  readOnly: true
                rus:
                  type: string
                  description: на русском языке
                  minLength: 1
                  maxLength: 500
                  example: Услуги по заграничным и каботажным перевозкам пассажиров круизными судами
                  readOnly: true
                eng:
                  type: string
                  description: на английском языке
                  minLength: 1
                  maxLength: 500
                  example: Overseas and coastal cruise passenger services
                  readOnly: true
                tur:
                  type: string
                  description: на турецком языке
                  minLength: 1
                  maxLength: 500
                  example: Denizaşırı ve kıyı yolcu hizmetleri
                  readOnly: true
                anotherLanguage:
                  type: string
                  minLength: 1
                  maxLength: 500
                  description: на любом другом языке
                  example: ___
                  readOnly: true
              readOnly: true
            validFrom:
              type: string
              description: Дата и время начала действия
              format: date-time
              example: '2023-04-10 15:45:18.300693+00'
              readOnly: true
            validTo:
              type: string
              description: Дата и время окончания действия
              format: date-time
              readOnly: true
          required:
            - code
            - parentCode
            - name
            - validFrom
      x-stoplight:
        id: babebc78663d6
      title: Иерархия классов "вверх"
      description: Иерархия классов от прямого предка до корня
    DownClassesHierarchy:
      oneOf:
        - $ref: '#/components/schemas/Class'
          description: Класс классификатора без предка
        - type: object
          description: Класс классификатора с предком
          properties:
            code:
              type: string
              description: Уникальный код класса в рамках классификатора
              example: ee211860-4018-4b9b-8a12-42f6066ef01d
            businessCode:
              type: string
              description: Уникальный в рамках классификатора бизнесовый код класса
              example: 50.10.12.000
            childCode:
              $ref: '#/components/schemas/DownClassesHierarchy'
              description: Класс-предок
              x-stoplight:
                id: nirm1sz3g6sk1
            name:
              type: object
              description: Наименование класса
              properties:
                byDefault:
                  type: string
                  description: на русском языке
                  minLength: 1
                  maxLength: 500
                  readOnly: true
                rus:
                  type: string
                  description: на русском языке
                  minLength: 1
                  maxLength: 500
                  example: Услуги по заграничным и каботажным перевозкам пассажиров круизными судами
                  readOnly: true
                eng:
                  type: string
                  description: на английском языке
                  minLength: 1
                  maxLength: 500
                  example: Overseas and coastal cruise passenger services
                  readOnly: true
                tur:
                  type: string
                  description: на турецком языке
                  minLength: 1
                  maxLength: 500
                  example: Denizaşırı ve kıyı yolcu hizmetleri
                  readOnly: true
                anotherLanguage:
                  type: string
                  minLength: 1
                  maxLength: 500
                  description: на любом другом языке
                  example: ___
                  readOnly: true
              readOnly: true
            validFrom:
              type: string
              description: Дата и время начала действия
              format: date-time
              example: '2023-04-10 15:45:18.300693+00'
              readOnly: true
            validTo:
              type: string
              description: Дата и время окончания действия
              format: date-time
              readOnly: true
          required:
            - code
            - childCode
            - name
            - validFrom
      x-stoplight:
        id: nuyu2o83l668t
      title: Иерархия классов "вниз"
      description: Иерархия классов от корня до прямого предка
    Directory:
      type: object
      title: Справочник
      description: Справочник
      properties:
        code:
          type: string
          example: material_and_technical_resources
          description: Уникальный код справочника в рамках системы
          readOnly: true
        name:
          type: object
          description: Наименование справочника
          properties:
            byDefault:
              type: string
              minLength: 1
              maxLength: 500
              example: Материально-технические ресурсы
              description: на русском языке
              readOnly: true
            rus:
              type: string
              minLength: 1
              maxLength: 500
              example: Материально-технические ресурсы
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              example: Material and technical resources
              description: на английском языке
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              example: Malzeme ve teknik kaynaklar
              description: на турецком языке
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        statusModel:
          type: string
          enum:
            - COUNTERPARTIES
            - DEFAULT
          description: Код статусной модели
          readOnly: true
      required:
        - code
        - name
      readOnly: true
    ItemWithAttributesCollection:
      title: Коллекция записей с атрибутами
      type: object
      description: Коллекция записей с атрибутами
      properties:
        attributes:
          type: array
          description: Атрибуты записей (на странице)
          items:
            $ref: '#/components/schemas/Attribute'
          readOnly: true
        wrapper:
          type: object
          description: Пагинация и записи
          required:
            - content
            - pageable
            - sort
            - totalPages
            - totalElements
            - last
            - first
            - numberOfElements
            - size
            - number
            - empty
          properties:
            content:
              type: array
              description: 'Множество записей, соотвествующих одному из объектов записи (в зависимости от значения dataSet)'
              items:
                oneOf:
                  - $ref: '#/components/schemas/FullDirectoryItem'
                  - $ref: '#/components/schemas/DefaultDirectoryItem'
                  - $ref: '#/components/schemas/ShortDirectoryItem'
              readOnly: true
            pageable:
              type: object
              description: Параметры пагинации данных
              properties:
                sort:
                  type: object
                  description: Параметры сортировки
                  properties:
                    sorted:
                      type: boolean
                      description: 'Признак наличия сортировки, заданной пользователем'
                      example: false
                    unsorted:
                      type: boolean
                      description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                      example: true
                    empty:
                      type: boolean
                      description: Признак наличия сортировки
                      example: true
                pageSize:
                  type: integer
                  format: int32
                  description: Количество элементов на странице
                  example: 20
                pageNumber:
                  type: integer
                  format: int32
                  description: Номер отображаемой страницы
                  example: 20
                offset:
                  type: integer
                  format: int32
                  description: Смещение по отношению к первой странице с учётом её размера
                  example: 20
                paged:
                  type: boolean
                  description: Признак постраничного отображения данных
                  example: true
                unpaged:
                  type: boolean
                  description: Признак отсутствия постраничного отображения данных
                  example: false
            sort:
              type: object
              description: Параметры сортировки
              properties:
                sorted:
                  type: boolean
                  description: 'Признак наличия сортировки, заданной пользователем'
                  example: false
                unsorted:
                  type: boolean
                  description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                  example: true
                empty:
                  type: boolean
                  description: Признак наличия сортировки
                  example: true
            totalPages:
              type: integer
              format: int32
              description: Общее количество всех страниц
              example: 1
            totalElements:
              type: integer
              format: int32
              description: Общее количество всех элементов
              example: 17
            last:
              type: boolean
              description: Признак первой страницы
              example: true
            first:
              type: boolean
              description: Признак последней страницы
              example: true
            numberOfElements:
              type: integer
              format: int32
              description: Количество элементов на странице - фактическое
              example: 17
            size:
              type: integer
              format: int32
              description: Количество элементов на странице
              example: 20
            number:
              type: integer
              format: int32
              description: Номер отображаемой страницы
              example: 0
            empty:
              type: boolean
              description: Признак наличия content
              example: true
          readOnly: true
      required:
        - attributes
        - wrapper
      readOnly: true
    ItemWithoutAttributesCollection:
      type: object
      title: Коллекция записей без атрибутов
      description: Коллекция записей без атрибутов
      examples: []
      properties:
        wrapper:
          type: object
          description: Пагинация и записи
          required:
            - content
            - pageable
            - sort
            - totalPages
            - totalElements
            - last
            - first
            - numberOfElements
            - size
            - number
            - empty
          properties:
            content:
              type: array
              description: 'Множество записей, соотвествующих одному из объектов записи (в зависимости от значения dataSet)'
              items:
                oneOf:
                  - $ref: '#/components/schemas/FullDirectoryItem'
                  - $ref: '#/components/schemas/DefaultDirectoryItem'
                  - $ref: '#/components/schemas/ShortDirectoryItem'
              readOnly: true
            pageable:
              type: object
              description: Параметры пагинации данных
              properties:
                sort:
                  type: object
                  description: Параметры сортировки
                  properties:
                    sorted:
                      type: boolean
                      description: 'Признак наличия сортировки, заданной пользователем'
                      example: false
                    unsorted:
                      type: boolean
                      description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                      example: true
                    empty:
                      type: boolean
                      description: Признак наличия сортировки
                      example: true
                pageSize:
                  type: integer
                  format: int32
                  description: Количество элементов на странице
                  example: 20
                pageNumber:
                  type: integer
                  format: int32
                  description: Номер отображаемой страницы
                  example: 20
                offset:
                  type: integer
                  format: int32
                  description: Смещение по отношению к первой странице с учётом её размера
                  example: 20
                paged:
                  type: boolean
                  description: Признак постраничного отображения данных
                  example: true
                unpaged:
                  type: boolean
                  description: Признак отсутствия постраничного отображения данных
                  example: false
            sort:
              type: object
              description: Параметры сортировки
              properties:
                sorted:
                  type: boolean
                  description: 'Признак наличия сортировки, заданной пользователем'
                  example: false
                unsorted:
                  type: boolean
                  description: 'Признак отсутствия наличия сортировки, заданной пользователем'
                  example: true
                empty:
                  type: boolean
                  description: Признак наличия сортировки
                  example: true
            totalPages:
              type: integer
              format: int32
              description: Общее количество всех страниц
              example: 1
            totalElements:
              type: integer
              format: int32
              description: Общее количество всех элементов
              example: 17
            last:
              type: boolean
              description: Признак первой страницы
              example: true
            first:
              type: boolean
              description: Признак последней страницы
              example: true
            numberOfElements:
              type: integer
              format: int32
              description: Количество элементов на странице - фактическое
              example: 17
            size:
              type: integer
              format: int32
              description: Количество элементов на странице
              example: 20
            number:
              type: integer
              format: int32
              description: Номер отображаемой страницы
              example: 0
            empty:
              type: boolean
              description: Признак наличия content
              example: true
          readOnly: true
      required:
        - wrapper
      readOnly: true
    ItemWithoutAttributes:
      type: object
      description: Запись без атрибутов
      title: Запись без атрибутов
      properties:
        item:
          oneOf:
            - $ref: '#/components/schemas/FullDirectoryItem'
            - $ref: '#/components/schemas/DefaultDirectoryItem'
            - $ref: '#/components/schemas/ShortDirectoryItem'
          description: Один из объектов записи (в зависимости от значения dataSet)
      required:
        - item
    ItemWithAttributes:
      type: object
      description: Запись с атрибутами
      title: Запись с атрибутами
      properties:
        attributes:
          type: array
          description: Атрибуты записи
          items:
            $ref: '#/components/schemas/Attribute'
          readOnly: true
        item:
          oneOf:
            - $ref: '#/components/schemas/FullDirectoryItem'
            - $ref: '#/components/schemas/DefaultDirectoryItem'
            - $ref: '#/components/schemas/ShortDirectoryItem'
          description: Один из объектов записи (в зависимости от значения dataSet)
      required:
        - attributes
        - item
      readOnly: true
    TechnicalAttributesItem:
      title: TechnicalAttributesItem
      type: object
      description: Технические атрибуты записи
      properties:
        id:
          type: string
          description: Уникальный идентификатор
          example: '1'
          readOnly: true
        code:
          type: string
          description: Уникальный код в разрезе Системы
          example: 8e48c190-8edb-4a58-a146-d7fea8c264f3
          readOnly: true
        name:
          type: object
          description: Наименование записи. Мультиязычное текстовое поле.
          properties:
            byDefault:
              type: string
              description: Наименование записи на русском языке
              example: Продукция
              readOnly: true
            rus:
              type: string
              description: Наименование записи на русском языке
              example: Продукция
              readOnly: true
            eng:
              type: string
              description: Наименование записи на английском языке
              example: Products
              readOnly: true
            tur:
              type: string
              description: Наименование записи на турецком языке
              example: Ürün
              readOnly: true
            anotherLanguage:
              type: string
              description: на любом другом языке
              example: ___
              readOnly: true
      required:
        - id
        - code
        - name
      examples: []
    FullDirectoryItem:
      title: Полная запись справочника
      type: object
      description: 'Запись плоского справочника или справочника с мастер данными, где есть все атрибуты'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код записи
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
        classifierCode:
          type: string
          description: Уникальный код класса или уникальный код самого классификатора (если справочник плоский)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
        name:
          type: object
          description: Наименования записи
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
        lock:
          type: boolean
          default: false
          description: 'Признак блокировки для изменения записи, в момент существования заявки на её изменение'
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки): OUTDATED (Устаревшая), DUPLICATE (Дубликат), INCONSISTENT (Несоответствующая), LIQUIDATION (Ликвидация), RESTRUCTURING (Реструктуризация), REFORM (Реформирование),OTHERS (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код записи-эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        validFrom:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время начала действия записи
        validTo:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время окончания действия записи
        cells:
          type: array
          description: Значения записи
          items:
            oneOf:
              - $ref: '#/components/schemas/CellValue'
              - $ref: '#/components/schemas/CellRange'
            description: Один из объектов ячейки (в зависимости от признака "диапазон" у атрибута)
          writeOnly: true
      required:
        - code
        - classifierCode
        - name
        - lock
        - validFrom
    DefaultDirectoryItem:
      title: Запись справочника по умолчанию
      type: object
      description: 'Запись плоского справочника или справочника с мастер данными, где есть атрибуты только корневого класса классификатора'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код записи
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        classifierCode:
          type: string
          description: Уникальный код класса или уникальный код самого классификатора (если справочник плоский)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
        name:
          type: object
          description: Наименования записи
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
        lock:
          type: boolean
          default: false
          description: 'Признак блокировки для изменения записи, в момент существования заявки на её изменение'
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки): OUTDATED (Устаревшая), DUPLICATE (Дубликат), INCONSISTENT (Несоответствующая), LIQUIDATION (Ликвидация), RESTRUCTURING (Реструктуризация), REFORM (Реформирование),OTHERS (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код записи-эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          writeOnly: true
        validFrom:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время начала действия записи
        validTo:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время окончания действия записи
        cells:
          type: array
          description: Значения записи
          items:
            oneOf:
              - $ref: '#/components/schemas/CellValue'
              - $ref: '#/components/schemas/CellRange'
          readOnly: true
      required:
        - code
        - classifierCode
        - name
        - lock
        - validFrom
    ShortDirectoryItem:
      type: object
      title: Краткая запись справочника
      description: 'Запись плоского справочника или справочника с мастер данными, где нет атрибутов'
      examples: []
      properties:
        code:
          type: string
          description: Уникальный в рамках справочника код записи
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        classifierCode:
          type: string
          description: Уникальный код класса или уникальный код самого классификатора (если справочник плоский)
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        name:
          type: object
          description: Наименования записи
          properties:
            byDefault:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            rus:
              type: string
              example: Насос циркуляционный UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              maxLength: 500
              minLength: 1
              description: на русском языке
              readOnly: true
            eng:
              type: string
              minLength: 1
              maxLength: 500
              description: на английском языке
              example: Pump circulation UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            tur:
              type: string
              minLength: 1
              maxLength: 500
              description: на турецком языке
              example: Pompa sirkülasyonu UPS 40-50 F 250 95906420 Q=8 м^3/ч H=до 5 м х250 мм U=230 В F=50 Гц Grundfos
              readOnly: true
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        lock:
          type: boolean
          default: false
          description: 'Признак блокировки для изменения записи, в момент существования заявки на её изменение'
          readOnly: true
        reasonCode:
          type: string
          description: 'Расширение назначения статуса (например причина блокировки): OUTDATED (Устаревшая), DUPLICATE (Дубликат), INCONSISTENT (Несоответствующая), LIQUIDATION (Ликвидация), RESTRUCTURING (Реструктуризация), REFORM (Реформирование),OTHERS (Другие)'
          enum:
            - OUTDATED
            - DUPLICATE
            - INCONSISTENT
            - LIQUIDATION
            - RESTRUCTURING
            - REFORM
            - OTHERS
          readOnly: true
        masterItemCode:
          type: string
          description: Уникальный в рамках справочника код записи-эталона. Приходит при reasonCode = DUPLICATE
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
        validFrom:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время начала действия записи
          readOnly: true
        validTo:
          type: string
          format: date-time
          example: '2022-09-01 07:18:10.983153+00'
          description: Дата и время окончания действия записи
          readOnly: true
      required:
        - code
        - classifierCode
        - name
        - lock
        - validFrom
      readOnly: true
    Attribute:
      type: object
      title: Атрибут
      examples: []
      description: Атрибут
      properties:
        code:
          type: string
          description: Уникальный в рамках Системы код атрибута
          example: pump_type
          readOnly: true
        name:
          type: object
          description: Наименования атрибута
          properties:
            byDefault:
              type: string
              description: на русском языке
              minLength: 1
              maxLength: 500
              example: Вид насоса
              readOnly: true
            rus:
              type: string
              description: на русском языке
              minLength: 1
              maxLength: 500
              example: Вид насоса
              readOnly: true
            eng:
              type: string
              description: на английском языке
              minLength: 1
              maxLength: 500
              example: Type of pump
              readOnly: true
            tur:
              type: string
              description: на турецком языке
              minLength: 1
              maxLength: 500
              example: tip pompa
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
              readOnly: true
          readOnly: true
        description:
          type: string
          description: Описание атрибута
          example: Вид насоса в АО "Иларион"
          readOnly: true
        list:
          type: boolean
          description: Признак "Список значений"
          readOnly: true
        enumeration:
          type: boolean
          description: Признак "Перечисление значений"
          readOnly: true
        range:
          type: boolean
          description: Признак "Диапазон значений"
          readOnly: true
        typeCode:
          type: string
          description: Тип значений атрибута
          enum:
            - INT
            - REAL
            - TEXT
            - DATE
            - BOOL
            - CLASSIFIER_ID
            - DIRECTORY_ITEM_ID
          readOnly: true
        enumValues:
          description: Перечисляемые значения. Приходит при enum = true
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/EnumValueString'
              - $ref: '#/components/schemas/EnumValueRef'
              - $ref: '#/components/schemas/EnumValueOther'
          readOnly: true
      required:
        - code
        - name
        - list
        - enumeration
        - range
        - typeCode
      readOnly: true
    CellValue:
      type: object
      title: Ячейка значений
      description: Ячейка без диапазонов
      examples: []
      properties:
        attributeCode:
          type: string
          description: Уникальный в рамках Системы код атрибута
          example: pump_type
          readOnly: true
        values:
          description: 'Значение(я): если атрибут имеет признак список - то массив значений, если не имеет- то одно значение в массиве'
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ValueString'
              - $ref: '#/components/schemas/ValueRef'
              - $ref: '#/components/schemas/ValueOther'
            description: Один из объектов значения (в зависимости от типа)
          readOnly: true
        ProposalItemCell:
          $ref: '#/components/schemas/ProposalItemCell'
        ProposalValue:
          $ref: '#/components/schemas/ProposalValue'
      required:
        - attributeCode
      readOnly: true
    CellRange:
      type: object
      title: Ячейка диапазонов
      description: Ячейка с диапазонами
      examples: []
      properties:
        attributeCode:
          type: string
          description: Уникальный в рамках Системы код атрибута
          example: pump_type
          readOnly: true
        ranges:
          type: array
          description: 'Диапазон(ы): если атрибут имеет признак список - то массив диапазонов, если не имеет- то один диапазон в массиве'
          items:
            $ref: '#/components/schemas/Range'
          readOnly: true
      required:
        - attributeCode
      readOnly: true
    ValueString:
      type: object
      title: Значение строка
      description: Значение атрибута с типом "Строка"
      examples: []
      properties:
        type:
          type: string
          enum:
            - TEXT
          description: Тип данных значения
          readOnly: true
        value:
          type: object
          description: Значение
          properties:
            byDefault:
              type: string
              description: 'на языке по умолчанию, установленном в Системе'
              example: насос
            rus:
              type: string
              description: на русском языке
              example: насос
              readOnly: true
            eng:
              type: string
              description: на английском языке
              example: pump
              readOnly: true
            tur:
              type: string
              description: на турецком языке
              example: pompa
              readOnly: true
            anotherLanguage:
              type: string
              description: на любом другом языке
              example: ___
          readOnly: true
      required:
        - type
        - value
      readOnly: true
    ValueRef:
      type: object
      title: Значение ссылка
      description: Значение атрибута с типом "Ссылка на класс" или "Ссылка на запись"
      examples:
        ValueRefClass:
          $ref: '#/components/examples/ModelValueRefClass'
        ValueRefItem:
          $ref: '#/components/examples/ModelValueRefItem'
      properties:
        type:
          type: string
          enum:
            - CLASSIFIER_ID
            - DIRECTORY_ITEM_ID
          description: Тип данных значения
          readOnly: true
        valueRef:
          description: Значение ссылка (на запись справочника или класс классификатора)
          oneOf:
            - $ref: '#/components/schemas/DirectoryItemRef'
            - $ref: '#/components/schemas/ClassRef'
      required:
        - type
        - valueRef
      readOnly: true
    ValueOther:
      type: object
      title: Остальные значения
      description: 'Значение атрибута с типом "Целочисленное число", "Вещественное число", "Логический признак" или "Дата"'
      examples:
        ValueOther:
          $ref: '#/components/examples/ModelValueOther'
      properties:
        type:
          type: string
          enum:
            - INT
            - REAL
            - DATE
            - BOOL
          description: Тип данных значения
          readOnly: true
        value:
          type:
            - integer
            - number
            - boolean
            - string
          description: Значение
          example: 44
          readOnly: true
      required:
        - type
        - value
      readOnly: true
    ClassRef:
      type: object
      title: Значение ссылка на класс классификатора
      properties:
        classCode:
          type: string
          description: Уникальный в рамках Системы код класса
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
      required:
        - classCode
      readOnly: true
      examples: []
      description: Значение ссылка на класс классификатора
    DirectoryItemRef:
      type: object
      title: Значение ссылка на запись справочника
      properties:
        directoryCode:
          type: string
          description: Уникальный в рамках Системы код справочника
          example: material_and_technical_resources
          readOnly: true
        directoryItemCode:
          type: string
          description: Уникальный в рамках справочника код записи
          example: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
          readOnly: true
      required:
        - directoryCode
        - directoryItemCode
      readOnly: true
      description: Значение ссылка на запись справочника
      examples: []
    EnumValueString:
      type: object
      title: Перечисляемое значение строка
      description: Перечисляемое значение атрибута с типом "Строка"
      examples: []
      properties:
        type:
          type: string
          enum:
            - TEXT
          description: Тип данных значения
          readOnly: true
        value:
          type: object
          description: Значение
          properties:
            byDefault:
              type: string
              description: 'на языке по умолчанию, установленном в Системе'
              example: насос
            rus:
              type: string
              description: на русском языке
              example: насос
              readOnly: true
            eng:
              type: string
              description: на английском языке
              example: pump
              readOnly: true
            tur:
              type: string
              description: на турецком языке
              example: pompa
              readOnly: true
            anotherLanguage:
              type: string
              description: на любом другом языке
              example: ___
          readOnly: true
      required:
        - type
        - value
      readOnly: true
    EnumValueRef:
      type: object
      title: Перечисляемое значение ссылка
      description: Перечисляемое значение атрибута с типом "Ссылка на класс" или "Ссылка на запись"
      examples:
        - type: CLASSIFIER_ID
          valueRef:
            classCode: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
        - type: DIRECTORY_ITEM_ID
          valueRef:
            directoryCode: material_and_technical_resources
            directoryItemCode: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
      properties:
        type:
          type: string
          enum:
            - CLASSIFIER_ID
            - DIRECTORY_ITEM_ID
          description: Тип данных значения
          readOnly: true
        valueRef:
          description: Значение ссылка (на запись справочника или класс классификатора)
          oneOf:
            - $ref: '#/components/schemas/DirectoryItemRef'
            - $ref: '#/components/schemas/ClassRef'
      required:
        - type
        - valueRef
      readOnly: true
    EnumValueOther:
      type: object
      title: Остальные перечисляемые значения
      description: 'Перечисляемое значение атрибута с типом "Целочисленное число", "Вещественное число", "Логический признак" или "Дата"'
      examples:
        - type: INT
          value: 44
      properties:
        type:
          type: string
          enum:
            - INT
            - REAL
            - DATE
            - BOOL
          description: Тип данных значения
          readOnly: true
        value:
          type:
            - integer
            - number
            - boolean
            - string
          description: Значение
          example: 44
          readOnly: true
      required:
        - type
        - value
      readOnly: true
    Range:
      type: object
      title: Диапазон
      description: Диапазон
      examples:
        examplesRange:
          $ref: '#/components/examples/ModelRange'
      properties:
        value:
          oneOf:
            - $ref: '#/components/schemas/ValueString'
            - $ref: '#/components/schemas/ValueRef'
            - $ref: '#/components/schemas/ValueOther'
          description: Начальное значение диапазона
        alterValue:
          oneOf:
            - $ref: '#/components/schemas/ValueString'
            - $ref: '#/components/schemas/ValueRef'
            - $ref: '#/components/schemas/ValueOther'
          description: Конечное значение диапазона
      required:
        - value
        - alterValue
      readOnly: true
    Proposal:
      type: object
      title: Заявка
      description: Заявка
      examples: []
      properties:
        directoryCode:
          type: string
          example: region
          description: Уникальный идентификатор справочника в который будет добавлена запись или в котором она будет изменена
          readOnly: true
        directoryItemCode:
          type: string
          example: 5ee994c5-59df-4a7b-b6d3-ff04ff652e22
          description: Уникальный идентификатор изменяемой или созданной записи
          readOnly: true
        initialDirectoryItemName:
          type: object
          description: 'Первичное наименование записи, которое определил инициатор при создании заявки или редактировании в статусе "Черновик"'
          properties:
            byDefault:
              type: string
              minLength: 1
              maxLength: 500
              example: Насос циркуляционный 40
              description: на русском языке
            rus:
              type: string
              minLength: 1
              maxLength: 500
              example: Насос циркуляционный 40
              description: на русском языке
            eng:
              type: string
              minLength: 1
              maxLength: 500
              example: Circulation pump 40
              description: на английском языке
            tur:
              type: string
              minLength: 1
              maxLength: 500
              example: Sirkülasyon pompası 40
              description: на турецком языке
            anotherLanguage:
              type: string
              minLength: 1
              maxLength: 500
              description: на любом другом языке
              example: ___
        type:
          type: string
          example: CREATE
          description: 'CREATE (  Создание записи),  UPDATE (  Изменение записи)'
          enum:
            - CREATE
            - UPDATE
        refinement:
          type: boolean
          example: false
          description: Признак уточняемой заявки
          readOnly: true
        directoryItemStatus:
          type: string
          example: Эталон
          description: Статус записи
          enum:
            - Эталон
            - Блокированная
            - Неактуальная
          readOnly: true
        visibility:
          type: boolean
          example: true
          description: Признак видимости заявки (скрытия)
          readOnly: true
        status:
          type: string
          example: Отклонено
          description: Статус заявки
          enum:
            - Выполнено
            - Отклонено без обработки
            - Отклонено без ответа
            - Отклонено
            - Заявки находящиеся без изменений заданное количество времени
            - Черновик
            - Новая
            - В работе
            - Уточнение
            - Ошибка
            - Ошибка обработки
          readOnly: true
        validationReport:
          type: string
          description: Отчет о непройденной валидации
          readOnly: true
        initiatorId:
          type: string
          description: Уникальный идентификатор инициатора
          readOnly: true
        executorId:
          type: string
          description: Уникальный идентификатор исполнителя (эксперта)
          readOnly: true
        statusUpdatedAt:
          type: string
          format: date-time
          example: '2022-12-25T17:32:28Z'
          description: Дата и время обновления статуса заявки
          readOnly: true
        createdAt:
          type: string
          format: date-time
          example: '2022-12-25T17:32:28Z'
          description: Дата и время создания записи
          readOnly: true
        body:
          $ref: '#/components/schemas/ProposalBody'
      required:
        - directoryCode
        - initialDirectoryItemName
        - type
        - refinement
        - visibility
        - status
        - body
      readOnly: true
    ProposalBody:
      type: object
      title: Версии записи в заявке
      description: Версии записи в заявке
      properties:
        classifierCode:
          type: string
          description: Уникальный код класса (в рамках справочника) в который будет добавлена запись или в котором она будет изменена
          format: uuid
          example: 1532d301-6bf3-4b04-a78c-9da6c5970322
          readOnly: true
        masterDirectoryId:
          type: integer
          example: 1
          description: Уникальный идентификатор справочника эталонной записи к которой привязывается заявка при попытке создать дубль или эталонной записи к которой привязывается блокируемая запись
          readOnly: true
        masterDirectoryItemId:
          type: integer
          example: 1
          description: Уникальный идентификатор эталонной записи к которой привязывается заявка при попытке создать дубль или эталонной записи к которой привязывается блокируемая запись
          readOnly: true
        masterDirectoryCode:
          type: string
          description: Код справочника эталонной записи к которой привязывается заявка при попытке создать дубль или эталонной записи к которой привязывается блокируемая запись
          readOnly: true
        masterDirectoryItemCode:
          type: string
          description: Код эталонной записи к которой привязывается заявка при попытке создать дубль или эталонной записи к которой привязывается блокируемая запись
          readOnly: true
        currentDirectoryItemName:
          type: string
          description: 'Наименование записи. Может быть первичное, рабочее и уточненное'
          readOnly: true
        Proposal:
          $ref: '#/components/schemas/Proposal'
      readOnly: true
    ProposalItemCell:
      type: object
      title: Ячейка записи
      description: Ячейка записи
      properties:
        proposalBodyId:
          type: integer
          description: Уникальный идентификатор версии записи в рамках заявки
          example: 1
          readOnly: true
        attributeId:
          type: integer
          example: 1
          description: Уникальный идентификатор атрибута
          readOnly: true
      required:
        - proposalBodyId
        - attributeId
      readOnly: true
    ProposalValue:
      type: object
      title: Значение
      description: Значение
      properties:
        valueDirectoryItemDirectoryId:
          type: integer
          example: 1
          description: Уникальный идентификатор-ссылка на справочник в котором хранится запись на которую ссылаются
          readOnly: true
        valueDirectoryItemId:
          type: integer
          example: 1
          description: Уникальный идентификатор-ссылка на запись справочника
          readOnly: true
        valueDirectoryItemVersionId:
          type: string
          description: Уникальный идентификатор-ссылка на запись справочника
          readOnly: true
        valueClassifierVersionId:
          type: string
          description: Уникальный идентификатор-ссылка на класс
          readOnly: true
        valueText:
          type: string
          description: Мультиязычное текстовое значение
        typeCode:
          type: string
          description: Код типа значения
          readOnly: true
        valueInt:
          type: integer
          example: 1
          description: Значение целого числа
        valueReal:
          type: integer
          example: 1
          description: Значение вещественного числа
        valueDate:
          type: string
          format: date
          example: '2022-12-25'
          description: Значение даты
        valueBool:
          type: boolean
          example: true
          description: Логическое значение
          default: true
          readOnly: true
      required:
        - typeCode
      readOnly: true
  examples:
    ModelValueOther:
      description: 'Пример значения атрибута с типом "Целочисленное число", "Вещественное число", "Логический признак" или "Дата"'
      value:
        - type: INT
          value: 44
    ModelValueRefClass:
      description: Пример значения ссылки на класс
      value:
        type: CLASSIFIER_ID
        valueRef:
          classCode: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
    ModelValueRefItem:
      description: Пример значения ссылки на запись
      value:
        type: DIRECTORY_ITEM_ID
        valueRef:
          directoryCode: material_and_technical_resources
          directoryItemCode: 6df58e56-7e0b-4cd9-a16c-8870348ba68d
    ModelRange:
      description: Пример диапазона
      value:
        value:
          type: TEXT
          value:
            byDefault: насос
            rus: насос
            eng: pump
            tur: pompa
            anotherLanguage: ___
        alterValue:
          type: TEXT
          value:
            byDefault: насос
            rus: насос
            eng: pump
            tur: pompa
            anotherLanguage: ___
  parameters:
    size:
      name: size
      in: query
      required: false
      schema:
        type: integer
        default: 20
        example: 100
        minLength: 1
        maxLength: 1000
        minimum: 1
        maximum: 1000
      description: Требуемое количество элементов на странице
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 0
        example: 1
        minimum: 0
      description: Требуемый номер отображаемой страницы
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        example: 'name,DESC'
        default: 'id,ASC'
      description: Требуемые параметры сортировки
    filter:
      name: filter
      in: query
      schema:
        type: string
        example: 'EQ,param,value'
      description: 'Фильтр. Параметр фильтра должен состоять из кода условия, кода атрибута и значения. В параметре можно задать следующие условия (зависят от типа атрибута): GT - больше, GE - больше или равно, LT - меньше, LE - меньше или равно, EQ - равно (полное совпадение), NE - не равно, EQ_IGNORE_CASE - равно (полное совпадение без учёта регистра), STARTS_WITH - начинается с, ENDS_IN - оканчивается на, IN - список значений, LIKE - равно (частичное совпадение), NOT_LIKE - не равно (частичное совпадение), LIKE_IGNORE_CASE - равно (частичное совпадение без учёта регистра), NOT_LIKE_IGNORE_CASE - не равно (частичное совпадение без учёта регистра), FTS - полнотекстовый поиск, IS_NULL - отсутствие значения. При фильтрации по атрибуту, который имеет тип CLASSIFIER_ID (ссылка на класс), в значении необоходимо указывать код классификатора и код класса через спец. символ "|". При фильтрации по атрибуту, который имеет тип CLASSDIRECTORY_ITEM_IDIFIER_ID (ссылка на запись), в значении необоходимо указывать код справочника и код записи через спец. символ "|". '
    dataSet:
      name: dataSet
      in: query
      required: false
      schema:
        type: string
        enum:
          - FULL
          - DEFAULT
          - SHORT
        example: FULL
        default: DEFAULT
      description: 'Требуемый набор данных - `полный`, `по умолчанию` и `краткий`. `Полный` набор - запись плоского справочника или справочника с мастер данными, имеет все атрибуты. Набор `по умолчанию` - запись плоского справочника или справочника с мастер данными, где есть атрибуты только корневого класса классификатора. `Краткий` набор - запись плоского справочника или справочника с мастер данными, где нет атрибутов'
    includeAttributes:
      name: includeAttributes
      in: query
      required: false
      schema:
        type: boolean
        default: false
        example: false
      description: Требуемый признак включения атрибутов
    classifiersCode:
      name: classifiersCode
      in: path
      required: true
      schema:
        type: string
        example: okpd2
      description: Уникальный код классификатора в рамках системы
    classCode:
      name: classCode
      in: path
      required: true
      schema:
        type: string
        example: ee211860-4018-4b9b-8a12-42f6066ef01d
      description: Уникальный код классификатора в рамках системы
    direction:
      name: direction
      in: query
      required: true
      schema:
        type: string
        enum:
          - Up
          - Down
        default: Up
      description: 'Направление ветви иерархии:  Up - от прямого предка к корню, Down - от корня к прямому предку'
  responses:
    403-forbidden:
      description: Учетной записи недостаточно прав
      content:
        application/json:
          schema:
            type: object
    401-unauthorized:
      description: Учетная запись не авторизована
      content:
        application/json:
          schema:
            type: object
security:
  - Authorization: []
